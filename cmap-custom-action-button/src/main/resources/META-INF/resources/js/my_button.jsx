/* global React, ReactDOM AlloyEditor */

import './../css/main.css'

(function() {
        'use strict';

        var React = AlloyEditor.React;

        var ActionButton = React.createClass(
        	{
	        	mixins: [AlloyEditor.ButtonStateClasses, AlloyEditor.ButtonKeystroke],

	        	displayName: "ActionButton",

	        	propTypes: {
				    editor: React.PropTypes.object.isRequired,
				    label: React.PropTypes.string,
				    tabIndex: React.PropTypes.number
				},

				statics: {

				    key: 'actionButton'
				},

	            getDefaultProps: function() {
	                return {
	                    command: '_createActions',
	                    keystroke: {
	                        fn: '_createActions',
	                        keys: CKEDITOR.CTRL + CKEDITOR.SHIFT + 89 /*Y*/
	                    }
	                };
	            },

	            getInitialState: function () {
	            	return {
	            		show: false,
	            		actions: 1
	            	}
	            },
	            
                // Aqui se entra cuando le das click al boton de ADD TOOLBAR
				render: function() {
			        var cssClass = 'ae-button ' + this.getStateClasses();
			        var svg = Liferay.Util.getLexiconIconTpl('desktop');

			        return (
		                <button
		                    className={cssClass}
		                    onClick={this._createActions}
		                    title="Log the selected text in the console"
		                    dangerouslySetInnerHTML={{__html: svg}}
		                />
			        );

				},

				 // Esto es lo que pasa cuando le picas al boton
				_createActions: function() {
					console.log("Hey!");

					this.state.actions = window.prompt("How many actions do you want?");

					console.log(CKEDITOR.config);

					console.log(this);
				   	// this tiene:
				   	// props y state
				   	let editorInstance = this.props.editor;
				   	let numberOfActions = this.state.actions;

				   	for (var i = 0; i < numberOfActions; i++) {
				   		var element = CKEDITOR.dom.element
				   	 	.createFromHtml(
				   	 		'<div class="actions-row row cmap-custom-action-button">' +
			                    '<div class="col-sm-10 cmap-custom-action-button">' +
				                    '<div class="mobile-headline whitney-small bold alt-color"><h3>Action</h3></div>' +
				                    '<div class="sr-only"><h3>Action</h3></div>' +
				                    '<p>Plan for infrastructure needs of the whole community through a capital improvement plan, including an assessment of the long-term maintenance costs generated by existing and planned developments</p>' +
			                    '</div>' +
			                    '<div class="mobile-hr col-sm-16">' +
			                    	'<hr/>' +
			                    '</div>' +
			                    '<div class="col-sm-6">' +
			                    	'<div class="mobile-headline whitney-small bold alt-color"><h3>Implementers</h3></div>' +
			                    	'<div class="sr-only"><h3>Implementers</h3></div>' +
			                    	'<p>Local governments</p>' +
			                    '</div>' +
			                    '<div class="col-sm-16">' +
			                    	'<hr/>' +
			                    '</div>' +
		                  	'</div>', 
		                editorInstance._editor.document );

                  		editorInstance._editor.container.appendHtml(element.getHtml());
				   	}
				   	
				}
		    }
	    );

    AlloyEditor.Buttons[ActionButton.key] = AlloyEditor.ActionButton = ActionButton;

}());