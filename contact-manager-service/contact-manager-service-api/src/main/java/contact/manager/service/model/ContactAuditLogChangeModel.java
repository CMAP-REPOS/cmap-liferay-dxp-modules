/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package contact.manager.service.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the ContactAuditLogChange service. Represents a row in the &quot;contactmanager_ContactAuditLogChange&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link contact.manager.service.model.impl.ContactAuditLogChangeModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link contact.manager.service.model.impl.ContactAuditLogChangeImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ContactAuditLogChange
 * @see contact.manager.service.model.impl.ContactAuditLogChangeImpl
 * @see contact.manager.service.model.impl.ContactAuditLogChangeModelImpl
 * @generated
 */
@ProviderType
public interface ContactAuditLogChangeModel extends BaseModel<ContactAuditLogChange> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a contact audit log change model instance should use the {@link ContactAuditLogChange} interface instead.
	 */

	/**
	 * Returns the primary key of this contact audit log change.
	 *
	 * @return the primary key of this contact audit log change
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this contact audit log change.
	 *
	 * @param primaryKey the primary key of this contact audit log change
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the contact audit log change ID of this contact audit log change.
	 *
	 * @return the contact audit log change ID of this contact audit log change
	 */
	public long getContactAuditLogChangeId();

	/**
	 * Sets the contact audit log change ID of this contact audit log change.
	 *
	 * @param contactAuditLogChangeId the contact audit log change ID of this contact audit log change
	 */
	public void setContactAuditLogChangeId(long contactAuditLogChangeId);

	/**
	 * Returns the contact audit log ID of this contact audit log change.
	 *
	 * @return the contact audit log ID of this contact audit log change
	 */
	public long getContactAuditLogId();

	/**
	 * Sets the contact audit log ID of this contact audit log change.
	 *
	 * @param contactAuditLogId the contact audit log ID of this contact audit log change
	 */
	public void setContactAuditLogId(long contactAuditLogId);

	/**
	 * Returns the field name of this contact audit log change.
	 *
	 * @return the field name of this contact audit log change
	 */
	@AutoEscape
	public String getFieldName();

	/**
	 * Sets the field name of this contact audit log change.
	 *
	 * @param fieldName the field name of this contact audit log change
	 */
	public void setFieldName(String fieldName);

	/**
	 * Returns the old value of this contact audit log change.
	 *
	 * @return the old value of this contact audit log change
	 */
	@AutoEscape
	public String getOldValue();

	/**
	 * Sets the old value of this contact audit log change.
	 *
	 * @param oldValue the old value of this contact audit log change
	 */
	public void setOldValue(String oldValue);

	/**
	 * Returns the new value of this contact audit log change.
	 *
	 * @return the new value of this contact audit log change
	 */
	@AutoEscape
	public String getNewValue();

	/**
	 * Sets the new value of this contact audit log change.
	 *
	 * @param newValue the new value of this contact audit log change
	 */
	public void setNewValue(String newValue);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		contact.manager.service.model.ContactAuditLogChange contactAuditLogChange);

	@Override
	public int hashCode();

	@Override
	public CacheModel<contact.manager.service.model.ContactAuditLogChange> toCacheModel();

	@Override
	public contact.manager.service.model.ContactAuditLogChange toEscapedModel();

	@Override
	public contact.manager.service.model.ContactAuditLogChange toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}