/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package contact.manager.service.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Contact service. Represents a row in the &quot;contactmanager_Contact&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link contact.manager.service.model.impl.ContactModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link contact.manager.service.model.impl.ContactImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Contact
 * @see contact.manager.service.model.impl.ContactImpl
 * @see contact.manager.service.model.impl.ContactModelImpl
 * @generated
 */
@ProviderType
public interface ContactModel extends BaseModel<Contact>, ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a contact model instance should use the {@link Contact} interface instead.
	 */

	/**
	 * Returns the primary key of this contact.
	 *
	 * @return the primary key of this contact
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this contact.
	 *
	 * @param primaryKey the primary key of this contact
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the contact ID of this contact.
	 *
	 * @return the contact ID of this contact
	 */
	public long getContactId();

	/**
	 * Sets the contact ID of this contact.
	 *
	 * @param contactId the contact ID of this contact
	 */
	public void setContactId(long contactId);

	/**
	 * Returns the constant contact ID of this contact.
	 *
	 * @return the constant contact ID of this contact
	 */
	public long getConstantContactId();

	/**
	 * Sets the constant contact ID of this contact.
	 *
	 * @param constantContactId the constant contact ID of this contact
	 */
	public void setConstantContactId(long constantContactId);

	/**
	 * Returns the group ID of this contact.
	 *
	 * @return the group ID of this contact
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this contact.
	 *
	 * @param groupId the group ID of this contact
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this contact.
	 *
	 * @return the company ID of this contact
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this contact.
	 *
	 * @param companyId the company ID of this contact
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this contact.
	 *
	 * @return the user ID of this contact
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this contact.
	 *
	 * @param userId the user ID of this contact
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this contact.
	 *
	 * @return the user uuid of this contact
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this contact.
	 *
	 * @param userUuid the user uuid of this contact
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the create date of this contact.
	 *
	 * @return the create date of this contact
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this contact.
	 *
	 * @param createDate the create date of this contact
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this contact.
	 *
	 * @return the modified date of this contact
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this contact.
	 *
	 * @param modifiedDate the modified date of this contact
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the prefix of this contact.
	 *
	 * @return the prefix of this contact
	 */
	@AutoEscape
	public String getPrefix();

	/**
	 * Sets the prefix of this contact.
	 *
	 * @param prefix the prefix of this contact
	 */
	public void setPrefix(String prefix);

	/**
	 * Returns the salutation of this contact.
	 *
	 * @return the salutation of this contact
	 */
	@AutoEscape
	public String getSalutation();

	/**
	 * Sets the salutation of this contact.
	 *
	 * @param salutation the salutation of this contact
	 */
	public void setSalutation(String salutation);

	/**
	 * Returns the first name of this contact.
	 *
	 * @return the first name of this contact
	 */
	@AutoEscape
	public String getFirstName();

	/**
	 * Sets the first name of this contact.
	 *
	 * @param firstName the first name of this contact
	 */
	public void setFirstName(String firstName);

	/**
	 * Returns the middle name of this contact.
	 *
	 * @return the middle name of this contact
	 */
	@AutoEscape
	public String getMiddleName();

	/**
	 * Sets the middle name of this contact.
	 *
	 * @param middleName the middle name of this contact
	 */
	public void setMiddleName(String middleName);

	/**
	 * Returns the last name of this contact.
	 *
	 * @return the last name of this contact
	 */
	@AutoEscape
	public String getLastName();

	/**
	 * Sets the last name of this contact.
	 *
	 * @param lastName the last name of this contact
	 */
	public void setLastName(String lastName);

	/**
	 * Returns the organization of this contact.
	 *
	 * @return the organization of this contact
	 */
	@AutoEscape
	public String getOrganization();

	/**
	 * Sets the organization of this contact.
	 *
	 * @param organization the organization of this contact
	 */
	public void setOrganization(String organization);

	/**
	 * Returns the job title of this contact.
	 *
	 * @return the job title of this contact
	 */
	@AutoEscape
	public String getJobTitle();

	/**
	 * Sets the job title of this contact.
	 *
	 * @param jobTitle the job title of this contact
	 */
	public void setJobTitle(String jobTitle);

	/**
	 * Returns the primary address1 of this contact.
	 *
	 * @return the primary address1 of this contact
	 */
	@AutoEscape
	public String getPrimaryAddress1();

	/**
	 * Sets the primary address1 of this contact.
	 *
	 * @param primaryAddress1 the primary address1 of this contact
	 */
	public void setPrimaryAddress1(String primaryAddress1);

	/**
	 * Returns the primary address2 of this contact.
	 *
	 * @return the primary address2 of this contact
	 */
	@AutoEscape
	public String getPrimaryAddress2();

	/**
	 * Sets the primary address2 of this contact.
	 *
	 * @param primaryAddress2 the primary address2 of this contact
	 */
	public void setPrimaryAddress2(String primaryAddress2);

	/**
	 * Returns the primary address city of this contact.
	 *
	 * @return the primary address city of this contact
	 */
	@AutoEscape
	public String getPrimaryAddressCity();

	/**
	 * Sets the primary address city of this contact.
	 *
	 * @param primaryAddressCity the primary address city of this contact
	 */
	public void setPrimaryAddressCity(String primaryAddressCity);

	/**
	 * Returns the primary address state of this contact.
	 *
	 * @return the primary address state of this contact
	 */
	@AutoEscape
	public String getPrimaryAddressState();

	/**
	 * Sets the primary address state of this contact.
	 *
	 * @param primaryAddressState the primary address state of this contact
	 */
	public void setPrimaryAddressState(String primaryAddressState);

	/**
	 * Returns the primary address zip of this contact.
	 *
	 * @return the primary address zip of this contact
	 */
	@AutoEscape
	public String getPrimaryAddressZip();

	/**
	 * Sets the primary address zip of this contact.
	 *
	 * @param primaryAddressZip the primary address zip of this contact
	 */
	public void setPrimaryAddressZip(String primaryAddressZip);

	/**
	 * Returns the primary address county of this contact.
	 *
	 * @return the primary address county of this contact
	 */
	@AutoEscape
	public String getPrimaryAddressCounty();

	/**
	 * Sets the primary address county of this contact.
	 *
	 * @param primaryAddressCounty the primary address county of this contact
	 */
	public void setPrimaryAddressCounty(String primaryAddressCounty);

	/**
	 * Returns the primary address country of this contact.
	 *
	 * @return the primary address country of this contact
	 */
	@AutoEscape
	public String getPrimaryAddressCountry();

	/**
	 * Sets the primary address country of this contact.
	 *
	 * @param primaryAddressCountry the primary address country of this contact
	 */
	public void setPrimaryAddressCountry(String primaryAddressCountry);

	/**
	 * Returns the secondary address1 of this contact.
	 *
	 * @return the secondary address1 of this contact
	 */
	@AutoEscape
	public String getSecondaryAddress1();

	/**
	 * Sets the secondary address1 of this contact.
	 *
	 * @param secondaryAddress1 the secondary address1 of this contact
	 */
	public void setSecondaryAddress1(String secondaryAddress1);

	/**
	 * Returns the secondary address2 of this contact.
	 *
	 * @return the secondary address2 of this contact
	 */
	@AutoEscape
	public String getSecondaryAddress2();

	/**
	 * Sets the secondary address2 of this contact.
	 *
	 * @param secondaryAddress2 the secondary address2 of this contact
	 */
	public void setSecondaryAddress2(String secondaryAddress2);

	/**
	 * Returns the secondary address city of this contact.
	 *
	 * @return the secondary address city of this contact
	 */
	@AutoEscape
	public String getSecondaryAddressCity();

	/**
	 * Sets the secondary address city of this contact.
	 *
	 * @param secondaryAddressCity the secondary address city of this contact
	 */
	public void setSecondaryAddressCity(String secondaryAddressCity);

	/**
	 * Returns the secondary address state of this contact.
	 *
	 * @return the secondary address state of this contact
	 */
	@AutoEscape
	public String getSecondaryAddressState();

	/**
	 * Sets the secondary address state of this contact.
	 *
	 * @param secondaryAddressState the secondary address state of this contact
	 */
	public void setSecondaryAddressState(String secondaryAddressState);

	/**
	 * Returns the secondary address zip of this contact.
	 *
	 * @return the secondary address zip of this contact
	 */
	@AutoEscape
	public String getSecondaryAddressZip();

	/**
	 * Sets the secondary address zip of this contact.
	 *
	 * @param secondaryAddressZip the secondary address zip of this contact
	 */
	public void setSecondaryAddressZip(String secondaryAddressZip);

	/**
	 * Returns the secondary address county of this contact.
	 *
	 * @return the secondary address county of this contact
	 */
	@AutoEscape
	public String getSecondaryAddressCounty();

	/**
	 * Sets the secondary address county of this contact.
	 *
	 * @param secondaryAddressCounty the secondary address county of this contact
	 */
	public void setSecondaryAddressCounty(String secondaryAddressCounty);

	/**
	 * Returns the secondary address country of this contact.
	 *
	 * @return the secondary address country of this contact
	 */
	@AutoEscape
	public String getSecondaryAddressCountry();

	/**
	 * Sets the secondary address country of this contact.
	 *
	 * @param secondaryAddressCountry the secondary address country of this contact
	 */
	public void setSecondaryAddressCountry(String secondaryAddressCountry);

	/**
	 * Returns the primary phone of this contact.
	 *
	 * @return the primary phone of this contact
	 */
	@AutoEscape
	public String getPrimaryPhone();

	/**
	 * Sets the primary phone of this contact.
	 *
	 * @param primaryPhone the primary phone of this contact
	 */
	public void setPrimaryPhone(String primaryPhone);

	/**
	 * Returns the primary fax of this contact.
	 *
	 * @return the primary fax of this contact
	 */
	@AutoEscape
	public String getPrimaryFax();

	/**
	 * Sets the primary fax of this contact.
	 *
	 * @param primaryFax the primary fax of this contact
	 */
	public void setPrimaryFax(String primaryFax);

	/**
	 * Returns the primary cell of this contact.
	 *
	 * @return the primary cell of this contact
	 */
	@AutoEscape
	public String getPrimaryCell();

	/**
	 * Sets the primary cell of this contact.
	 *
	 * @param primaryCell the primary cell of this contact
	 */
	public void setPrimaryCell(String primaryCell);

	/**
	 * Returns the primary email address of this contact.
	 *
	 * @return the primary email address of this contact
	 */
	@AutoEscape
	public String getPrimaryEmailAddress();

	/**
	 * Sets the primary email address of this contact.
	 *
	 * @param primaryEmailAddress the primary email address of this contact
	 */
	public void setPrimaryEmailAddress(String primaryEmailAddress);

	/**
	 * Returns the alternate contact of this contact.
	 *
	 * @return the alternate contact of this contact
	 */
	@AutoEscape
	public String getAlternateContact();

	/**
	 * Sets the alternate contact of this contact.
	 *
	 * @param alternateContact the alternate contact of this contact
	 */
	public void setAlternateContact(String alternateContact);

	/**
	 * Returns the alternate email of this contact.
	 *
	 * @return the alternate email of this contact
	 */
	@AutoEscape
	public String getAlternateEmail();

	/**
	 * Sets the alternate email of this contact.
	 *
	 * @param alternateEmail the alternate email of this contact
	 */
	public void setAlternateEmail(String alternateEmail);

	/**
	 * Returns the is vip of this contact.
	 *
	 * @return the is vip of this contact
	 */
	public boolean getIsVip();

	/**
	 * Returns <code>true</code> if this contact is is vip.
	 *
	 * @return <code>true</code> if this contact is is vip; <code>false</code> otherwise
	 */
	public boolean isIsVip();

	/**
	 * Sets whether this contact is is vip.
	 *
	 * @param isVip the is vip of this contact
	 */
	public void setIsVip(boolean isVip);

	/**
	 * Returns the facebook ID of this contact.
	 *
	 * @return the facebook ID of this contact
	 */
	@AutoEscape
	public String getFacebookId();

	/**
	 * Sets the facebook ID of this contact.
	 *
	 * @param facebookId the facebook ID of this contact
	 */
	public void setFacebookId(String facebookId);

	/**
	 * Returns the twitter handle of this contact.
	 *
	 * @return the twitter handle of this contact
	 */
	@AutoEscape
	public String getTwitterHandle();

	/**
	 * Sets the twitter handle of this contact.
	 *
	 * @param twitterHandle the twitter handle of this contact
	 */
	public void setTwitterHandle(String twitterHandle);

	/**
	 * Returns the linked in url of this contact.
	 *
	 * @return the linked in url of this contact
	 */
	@AutoEscape
	public String getLinkedInUrl();

	/**
	 * Sets the linked in url of this contact.
	 *
	 * @param linkedInUrl the linked in url of this contact
	 */
	public void setLinkedInUrl(String linkedInUrl);

	/**
	 * Returns the status of this contact.
	 *
	 * @return the status of this contact
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this contact.
	 *
	 * @param status the status of this contact
	 */
	public void setStatus(String status);

	/**
	 * Returns the kiosk uuid of this contact.
	 *
	 * @return the kiosk uuid of this contact
	 */
	@AutoEscape
	public String getKioskUuid();

	/**
	 * Sets the kiosk uuid of this contact.
	 *
	 * @param kioskUuid the kiosk uuid of this contact
	 */
	public void setKioskUuid(String kioskUuid);

	/**
	 * Returns the image file entry ID of this contact.
	 *
	 * @return the image file entry ID of this contact
	 */
	public long getImageFileEntryId();

	/**
	 * Sets the image file entry ID of this contact.
	 *
	 * @param imageFileEntryId the image file entry ID of this contact
	 */
	public void setImageFileEntryId(long imageFileEntryId);

	/**
	 * Returns the tags list of this contact.
	 *
	 * @return the tags list of this contact
	 */
	@AutoEscape
	public String getTagsList();

	/**
	 * Sets the tags list of this contact.
	 *
	 * @param tagsList the tags list of this contact
	 */
	public void setTagsList(String tagsList);

	/**
	 * Returns the sub groups list of this contact.
	 *
	 * @return the sub groups list of this contact
	 */
	@AutoEscape
	public String getSubGroupsList();

	/**
	 * Sets the sub groups list of this contact.
	 *
	 * @param subGroupsList the sub groups list of this contact
	 */
	public void setSubGroupsList(String subGroupsList);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(contact.manager.service.model.Contact contact);

	@Override
	public int hashCode();

	@Override
	public CacheModel<contact.manager.service.model.Contact> toCacheModel();

	@Override
	public contact.manager.service.model.Contact toEscapedModel();

	@Override
	public contact.manager.service.model.Contact toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}