/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package contact.manager.service.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ContactAuditLog service. Represents a row in the &quot;contactmanager_ContactAuditLog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link contact.manager.service.model.impl.ContactAuditLogModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link contact.manager.service.model.impl.ContactAuditLogImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ContactAuditLog
 * @see contact.manager.service.model.impl.ContactAuditLogImpl
 * @see contact.manager.service.model.impl.ContactAuditLogModelImpl
 * @generated
 */
@ProviderType
public interface ContactAuditLogModel extends BaseModel<ContactAuditLog>,
	ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a contact audit log model instance should use the {@link ContactAuditLog} interface instead.
	 */

	/**
	 * Returns the primary key of this contact audit log.
	 *
	 * @return the primary key of this contact audit log
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this contact audit log.
	 *
	 * @param primaryKey the primary key of this contact audit log
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the contact audit log ID of this contact audit log.
	 *
	 * @return the contact audit log ID of this contact audit log
	 */
	public long getContactAuditLogId();

	/**
	 * Sets the contact audit log ID of this contact audit log.
	 *
	 * @param contactAuditLogId the contact audit log ID of this contact audit log
	 */
	public void setContactAuditLogId(long contactAuditLogId);

	/**
	 * Returns the group ID of this contact audit log.
	 *
	 * @return the group ID of this contact audit log
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this contact audit log.
	 *
	 * @param groupId the group ID of this contact audit log
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this contact audit log.
	 *
	 * @return the company ID of this contact audit log
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this contact audit log.
	 *
	 * @param companyId the company ID of this contact audit log
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this contact audit log.
	 *
	 * @return the user ID of this contact audit log
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this contact audit log.
	 *
	 * @param userId the user ID of this contact audit log
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this contact audit log.
	 *
	 * @return the user uuid of this contact audit log
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this contact audit log.
	 *
	 * @param userUuid the user uuid of this contact audit log
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the create date of this contact audit log.
	 *
	 * @return the create date of this contact audit log
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this contact audit log.
	 *
	 * @param createDate the create date of this contact audit log
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the action of this contact audit log.
	 *
	 * @return the action of this contact audit log
	 */
	@AutoEscape
	public String getAction();

	/**
	 * Sets the action of this contact audit log.
	 *
	 * @param action the action of this contact audit log
	 */
	public void setAction(String action);

	/**
	 * Returns the constant contact ID of this contact audit log.
	 *
	 * @return the constant contact ID of this contact audit log
	 */
	public long getConstantContactId();

	/**
	 * Sets the constant contact ID of this contact audit log.
	 *
	 * @param constantContactId the constant contact ID of this contact audit log
	 */
	public void setConstantContactId(long constantContactId);

	/**
	 * Returns the old snapshot of this contact audit log.
	 *
	 * @return the old snapshot of this contact audit log
	 */
	@AutoEscape
	public String getOldSnapshot();

	/**
	 * Sets the old snapshot of this contact audit log.
	 *
	 * @param oldSnapshot the old snapshot of this contact audit log
	 */
	public void setOldSnapshot(String oldSnapshot);

	/**
	 * Returns the new snapshot of this contact audit log.
	 *
	 * @return the new snapshot of this contact audit log
	 */
	@AutoEscape
	public String getNewSnapshot();

	/**
	 * Sets the new snapshot of this contact audit log.
	 *
	 * @param newSnapshot the new snapshot of this contact audit log
	 */
	public void setNewSnapshot(String newSnapshot);

	/**
	 * Returns the contact ID of this contact audit log.
	 *
	 * @return the contact ID of this contact audit log
	 */
	public long getContactId();

	/**
	 * Sets the contact ID of this contact audit log.
	 *
	 * @param contactId the contact ID of this contact audit log
	 */
	public void setContactId(long contactId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		contact.manager.service.model.ContactAuditLog contactAuditLog);

	@Override
	public int hashCode();

	@Override
	public CacheModel<contact.manager.service.model.ContactAuditLog> toCacheModel();

	@Override
	public contact.manager.service.model.ContactAuditLog toEscapedModel();

	@Override
	public contact.manager.service.model.ContactAuditLog toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}