/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package contact.manager.service.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the County service. Represents a row in the &quot;contactmanager_County&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link contact.manager.service.model.impl.CountyModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link contact.manager.service.model.impl.CountyImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see County
 * @see contact.manager.service.model.impl.CountyImpl
 * @see contact.manager.service.model.impl.CountyModelImpl
 * @generated
 */
@ProviderType
public interface CountyModel extends BaseModel<County> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a county model instance should use the {@link County} interface instead.
	 */

	/**
	 * Returns the primary key of this county.
	 *
	 * @return the primary key of this county
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this county.
	 *
	 * @param primaryKey the primary key of this county
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the county ID of this county.
	 *
	 * @return the county ID of this county
	 */
	public long getCountyId();

	/**
	 * Sets the county ID of this county.
	 *
	 * @param countyId the county ID of this county
	 */
	public void setCountyId(long countyId);

	/**
	 * Returns the county name of this county.
	 *
	 * @return the county name of this county
	 */
	@AutoEscape
	public String getCountyName();

	/**
	 * Sets the county name of this county.
	 *
	 * @param countyName the county name of this county
	 */
	public void setCountyName(String countyName);

	/**
	 * Returns the zip code of this county.
	 *
	 * @return the zip code of this county
	 */
	@AutoEscape
	public String getZipCode();

	/**
	 * Sets the zip code of this county.
	 *
	 * @param zipCode the zip code of this county
	 */
	public void setZipCode(String zipCode);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(contact.manager.service.model.County county);

	@Override
	public int hashCode();

	@Override
	public CacheModel<contact.manager.service.model.County> toCacheModel();

	@Override
	public contact.manager.service.model.County toEscapedModel();

	@Override
	public contact.manager.service.model.County toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}