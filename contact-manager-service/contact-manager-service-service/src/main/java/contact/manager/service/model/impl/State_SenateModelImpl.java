/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package contact.manager.service.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import contact.manager.service.model.State_Senate;
import contact.manager.service.model.State_SenateModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the State_Senate service. Represents a row in the &quot;contactmanager_State_Senate&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link State_SenateModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link State_SenateImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see State_SenateImpl
 * @see State_Senate
 * @see State_SenateModel
 * @generated
 */
@ProviderType
public class State_SenateModelImpl extends BaseModelImpl<State_Senate>
	implements State_SenateModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a state_ senate model instance should use the {@link State_Senate} interface instead.
	 */
	public static final String TABLE_NAME = "contactmanager_State_Senate";
	public static final Object[][] TABLE_COLUMNS = {
			{ "stateSenateId", Types.BIGINT },
			{ "stateSenateNumber", Types.INTEGER },
			{ "stateSenateName", Types.VARCHAR },
			{ "zipCode", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("stateSenateId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("stateSenateNumber", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("stateSenateName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("zipCode", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table contactmanager_State_Senate (stateSenateId LONG not null primary key,stateSenateNumber INTEGER,stateSenateName VARCHAR(75) null,zipCode VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table contactmanager_State_Senate";
	public static final String ORDER_BY_JPQL = " ORDER BY state_Senate.stateSenateNumber ASC, state_Senate.stateSenateName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY contactmanager_State_Senate.stateSenateNumber ASC, contactmanager_State_Senate.stateSenateName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(contact.manager.service.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.contact.manager.service.model.State_Senate"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(contact.manager.service.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.contact.manager.service.model.State_Senate"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(contact.manager.service.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.contact.manager.service.model.State_Senate"),
			true);
	public static final long ZIPCODE_COLUMN_BITMASK = 1L;
	public static final long STATESENATENUMBER_COLUMN_BITMASK = 2L;
	public static final long STATESENATENAME_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(contact.manager.service.service.util.ServiceProps.get(
				"lock.expiration.time.contact.manager.service.model.State_Senate"));

	public State_SenateModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _stateSenateId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStateSenateId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _stateSenateId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return State_Senate.class;
	}

	@Override
	public String getModelClassName() {
		return State_Senate.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("stateSenateId", getStateSenateId());
		attributes.put("stateSenateNumber", getStateSenateNumber());
		attributes.put("stateSenateName", getStateSenateName());
		attributes.put("zipCode", getZipCode());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long stateSenateId = (Long)attributes.get("stateSenateId");

		if (stateSenateId != null) {
			setStateSenateId(stateSenateId);
		}

		Integer stateSenateNumber = (Integer)attributes.get("stateSenateNumber");

		if (stateSenateNumber != null) {
			setStateSenateNumber(stateSenateNumber);
		}

		String stateSenateName = (String)attributes.get("stateSenateName");

		if (stateSenateName != null) {
			setStateSenateName(stateSenateName);
		}

		String zipCode = (String)attributes.get("zipCode");

		if (zipCode != null) {
			setZipCode(zipCode);
		}
	}

	@Override
	public long getStateSenateId() {
		return _stateSenateId;
	}

	@Override
	public void setStateSenateId(long stateSenateId) {
		_stateSenateId = stateSenateId;
	}

	@Override
	public int getStateSenateNumber() {
		return _stateSenateNumber;
	}

	@Override
	public void setStateSenateNumber(int stateSenateNumber) {
		_columnBitmask = -1L;

		_stateSenateNumber = stateSenateNumber;
	}

	@Override
	public String getStateSenateName() {
		if (_stateSenateName == null) {
			return StringPool.BLANK;
		}
		else {
			return _stateSenateName;
		}
	}

	@Override
	public void setStateSenateName(String stateSenateName) {
		_columnBitmask = -1L;

		_stateSenateName = stateSenateName;
	}

	@Override
	public String getZipCode() {
		if (_zipCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _zipCode;
		}
	}

	@Override
	public void setZipCode(String zipCode) {
		_columnBitmask |= ZIPCODE_COLUMN_BITMASK;

		if (_originalZipCode == null) {
			_originalZipCode = _zipCode;
		}

		_zipCode = zipCode;
	}

	public String getOriginalZipCode() {
		return GetterUtil.getString(_originalZipCode);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			State_Senate.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public State_Senate toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (State_Senate)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		State_SenateImpl state_SenateImpl = new State_SenateImpl();

		state_SenateImpl.setStateSenateId(getStateSenateId());
		state_SenateImpl.setStateSenateNumber(getStateSenateNumber());
		state_SenateImpl.setStateSenateName(getStateSenateName());
		state_SenateImpl.setZipCode(getZipCode());

		state_SenateImpl.resetOriginalValues();

		return state_SenateImpl;
	}

	@Override
	public int compareTo(State_Senate state_Senate) {
		int value = 0;

		if (getStateSenateNumber() < state_Senate.getStateSenateNumber()) {
			value = -1;
		}
		else if (getStateSenateNumber() > state_Senate.getStateSenateNumber()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		value = getStateSenateName().compareTo(state_Senate.getStateSenateName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof State_Senate)) {
			return false;
		}

		State_Senate state_Senate = (State_Senate)obj;

		long primaryKey = state_Senate.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		State_SenateModelImpl state_SenateModelImpl = this;

		state_SenateModelImpl._originalZipCode = state_SenateModelImpl._zipCode;

		state_SenateModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<State_Senate> toCacheModel() {
		State_SenateCacheModel state_SenateCacheModel = new State_SenateCacheModel();

		state_SenateCacheModel.stateSenateId = getStateSenateId();

		state_SenateCacheModel.stateSenateNumber = getStateSenateNumber();

		state_SenateCacheModel.stateSenateName = getStateSenateName();

		String stateSenateName = state_SenateCacheModel.stateSenateName;

		if ((stateSenateName != null) && (stateSenateName.length() == 0)) {
			state_SenateCacheModel.stateSenateName = null;
		}

		state_SenateCacheModel.zipCode = getZipCode();

		String zipCode = state_SenateCacheModel.zipCode;

		if ((zipCode != null) && (zipCode.length() == 0)) {
			state_SenateCacheModel.zipCode = null;
		}

		return state_SenateCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{stateSenateId=");
		sb.append(getStateSenateId());
		sb.append(", stateSenateNumber=");
		sb.append(getStateSenateNumber());
		sb.append(", stateSenateName=");
		sb.append(getStateSenateName());
		sb.append(", zipCode=");
		sb.append(getZipCode());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("contact.manager.service.model.State_Senate");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>stateSenateId</column-name><column-value><![CDATA[");
		sb.append(getStateSenateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stateSenateNumber</column-name><column-value><![CDATA[");
		sb.append(getStateSenateNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stateSenateName</column-name><column-value><![CDATA[");
		sb.append(getStateSenateName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>zipCode</column-name><column-value><![CDATA[");
		sb.append(getZipCode());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = State_Senate.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			State_Senate.class
		};
	private long _stateSenateId;
	private int _stateSenateNumber;
	private String _stateSenateName;
	private String _zipCode;
	private String _originalZipCode;
	private long _columnBitmask;
	private State_Senate _escapedModel;
}