/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ucc.portal.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import ucc.portal.model.CExtChurchFinancesIncomeOther;
import ucc.portal.model.CExtChurchFinancesIncomeOtherModel;

import ucc.portal.service.persistence.CExtChurchFinancesIncomeOtherPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CExtChurchFinancesIncomeOther service. Represents a row in the &quot;UCC_CExtChurchFinancesIncomeOther&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CExtChurchFinancesIncomeOtherModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CExtChurchFinancesIncomeOtherImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CExtChurchFinancesIncomeOtherImpl
 * @see CExtChurchFinancesIncomeOther
 * @see CExtChurchFinancesIncomeOtherModel
 * @generated
 */
@ProviderType
public class CExtChurchFinancesIncomeOtherModelImpl extends BaseModelImpl<CExtChurchFinancesIncomeOther>
	implements CExtChurchFinancesIncomeOtherModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a c ext church finances income other model instance should use the {@link CExtChurchFinancesIncomeOther} interface instead.
	 */
	public static final String TABLE_NAME = "UCC_CExtChurchFinancesIncomeOther";
	public static final Object[][] TABLE_COLUMNS = {
			{ "organizationId", Types.BIGINT },
			{ "cextChurchFinancesIncomeOtherId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "fnIncomeOther", Types.INTEGER },
			{ "fnIncomeOtherDescription", Types.VARCHAR },
			{ "fnPriority", Types.DOUBLE }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("organizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("cextChurchFinancesIncomeOtherId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("fnIncomeOther", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("fnIncomeOtherDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fnPriority", Types.DOUBLE);
	}

	public static final String TABLE_SQL_CREATE = "create table UCC_CExtChurchFinancesIncomeOther (organizationId LONG not null,cextChurchFinancesIncomeOtherId LONG not null,companyId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,fnIncomeOther INTEGER,fnIncomeOtherDescription VARCHAR(75) null,fnPriority DOUBLE,primary key (organizationId, cextChurchFinancesIncomeOtherId))";
	public static final String TABLE_SQL_DROP = "drop table UCC_CExtChurchFinancesIncomeOther";
	public static final String ORDER_BY_JPQL = " ORDER BY cExtChurchFinancesIncomeOther.fnPriority ASC";
	public static final String ORDER_BY_SQL = " ORDER BY UCC_CExtChurchFinancesIncomeOther.fnPriority ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "extSessionFactory";
	public static final String TX_MANAGER = "extTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.ucc.portal.model.CExtChurchFinancesIncomeOther"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.ucc.portal.model.CExtChurchFinancesIncomeOther"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.ucc.portal.model.CExtChurchFinancesIncomeOther"),
			true);
	public static final long ORGANIZATIONID_COLUMN_BITMASK = 1L;
	public static final long FNPRIORITY_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(ucc.portal.service.util.ServiceProps.get(
				"lock.expiration.time.ucc.portal.model.CExtChurchFinancesIncomeOther"));

	public CExtChurchFinancesIncomeOtherModelImpl() {
	}

	@Override
	public CExtChurchFinancesIncomeOtherPK getPrimaryKey() {
		return new CExtChurchFinancesIncomeOtherPK(_organizationId,
			_cextChurchFinancesIncomeOtherId);
	}

	@Override
	public void setPrimaryKey(CExtChurchFinancesIncomeOtherPK primaryKey) {
		setOrganizationId(primaryKey.organizationId);
		setCextChurchFinancesIncomeOtherId(primaryKey.cextChurchFinancesIncomeOtherId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new CExtChurchFinancesIncomeOtherPK(_organizationId,
			_cextChurchFinancesIncomeOtherId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((CExtChurchFinancesIncomeOtherPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return CExtChurchFinancesIncomeOther.class;
	}

	@Override
	public String getModelClassName() {
		return CExtChurchFinancesIncomeOther.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("organizationId", getOrganizationId());
		attributes.put("cextChurchFinancesIncomeOtherId",
			getCextChurchFinancesIncomeOtherId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("fnIncomeOther", getFnIncomeOther());
		attributes.put("fnIncomeOtherDescription", getFnIncomeOtherDescription());
		attributes.put("fnPriority", getFnPriority());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		Long cextChurchFinancesIncomeOtherId = (Long)attributes.get(
				"cextChurchFinancesIncomeOtherId");

		if (cextChurchFinancesIncomeOtherId != null) {
			setCextChurchFinancesIncomeOtherId(cextChurchFinancesIncomeOtherId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer fnIncomeOther = (Integer)attributes.get("fnIncomeOther");

		if (fnIncomeOther != null) {
			setFnIncomeOther(fnIncomeOther);
		}

		String fnIncomeOtherDescription = (String)attributes.get(
				"fnIncomeOtherDescription");

		if (fnIncomeOtherDescription != null) {
			setFnIncomeOtherDescription(fnIncomeOtherDescription);
		}

		Double fnPriority = (Double)attributes.get("fnPriority");

		if (fnPriority != null) {
			setFnPriority(fnPriority);
		}
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask |= ORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	@Override
	public long getCextChurchFinancesIncomeOtherId() {
		return _cextChurchFinancesIncomeOtherId;
	}

	@Override
	public void setCextChurchFinancesIncomeOtherId(
		long cextChurchFinancesIncomeOtherId) {
		_cextChurchFinancesIncomeOtherId = cextChurchFinancesIncomeOtherId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public int getFnIncomeOther() {
		return _fnIncomeOther;
	}

	@Override
	public void setFnIncomeOther(int fnIncomeOther) {
		_fnIncomeOther = fnIncomeOther;
	}

	@Override
	public String getFnIncomeOtherDescription() {
		if (_fnIncomeOtherDescription == null) {
			return "";
		}
		else {
			return _fnIncomeOtherDescription;
		}
	}

	@Override
	public void setFnIncomeOtherDescription(String fnIncomeOtherDescription) {
		_fnIncomeOtherDescription = fnIncomeOtherDescription;
	}

	@Override
	public double getFnPriority() {
		return _fnPriority;
	}

	@Override
	public void setFnPriority(double fnPriority) {
		_columnBitmask = -1L;

		_fnPriority = fnPriority;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public CExtChurchFinancesIncomeOther toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CExtChurchFinancesIncomeOther)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CExtChurchFinancesIncomeOtherImpl cExtChurchFinancesIncomeOtherImpl = new CExtChurchFinancesIncomeOtherImpl();

		cExtChurchFinancesIncomeOtherImpl.setOrganizationId(getOrganizationId());
		cExtChurchFinancesIncomeOtherImpl.setCextChurchFinancesIncomeOtherId(getCextChurchFinancesIncomeOtherId());
		cExtChurchFinancesIncomeOtherImpl.setCompanyId(getCompanyId());
		cExtChurchFinancesIncomeOtherImpl.setUserId(getUserId());
		cExtChurchFinancesIncomeOtherImpl.setCreateDate(getCreateDate());
		cExtChurchFinancesIncomeOtherImpl.setModifiedDate(getModifiedDate());
		cExtChurchFinancesIncomeOtherImpl.setFnIncomeOther(getFnIncomeOther());
		cExtChurchFinancesIncomeOtherImpl.setFnIncomeOtherDescription(getFnIncomeOtherDescription());
		cExtChurchFinancesIncomeOtherImpl.setFnPriority(getFnPriority());

		cExtChurchFinancesIncomeOtherImpl.resetOriginalValues();

		return cExtChurchFinancesIncomeOtherImpl;
	}

	@Override
	public int compareTo(
		CExtChurchFinancesIncomeOther cExtChurchFinancesIncomeOther) {
		int value = 0;

		if (getFnPriority() < cExtChurchFinancesIncomeOther.getFnPriority()) {
			value = -1;
		}
		else if (getFnPriority() > cExtChurchFinancesIncomeOther.getFnPriority()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CExtChurchFinancesIncomeOther)) {
			return false;
		}

		CExtChurchFinancesIncomeOther cExtChurchFinancesIncomeOther = (CExtChurchFinancesIncomeOther)obj;

		CExtChurchFinancesIncomeOtherPK primaryKey = cExtChurchFinancesIncomeOther.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CExtChurchFinancesIncomeOtherModelImpl cExtChurchFinancesIncomeOtherModelImpl =
			this;

		cExtChurchFinancesIncomeOtherModelImpl._originalOrganizationId = cExtChurchFinancesIncomeOtherModelImpl._organizationId;

		cExtChurchFinancesIncomeOtherModelImpl._setOriginalOrganizationId = false;

		cExtChurchFinancesIncomeOtherModelImpl._setModifiedDate = false;

		cExtChurchFinancesIncomeOtherModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CExtChurchFinancesIncomeOther> toCacheModel() {
		CExtChurchFinancesIncomeOtherCacheModel cExtChurchFinancesIncomeOtherCacheModel =
			new CExtChurchFinancesIncomeOtherCacheModel();

		cExtChurchFinancesIncomeOtherCacheModel.cExtChurchFinancesIncomeOtherPK = getPrimaryKey();

		cExtChurchFinancesIncomeOtherCacheModel.organizationId = getOrganizationId();

		cExtChurchFinancesIncomeOtherCacheModel.cextChurchFinancesIncomeOtherId = getCextChurchFinancesIncomeOtherId();

		cExtChurchFinancesIncomeOtherCacheModel.companyId = getCompanyId();

		cExtChurchFinancesIncomeOtherCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			cExtChurchFinancesIncomeOtherCacheModel.createDate = createDate.getTime();
		}
		else {
			cExtChurchFinancesIncomeOtherCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			cExtChurchFinancesIncomeOtherCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			cExtChurchFinancesIncomeOtherCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		cExtChurchFinancesIncomeOtherCacheModel.fnIncomeOther = getFnIncomeOther();

		cExtChurchFinancesIncomeOtherCacheModel.fnIncomeOtherDescription = getFnIncomeOtherDescription();

		String fnIncomeOtherDescription = cExtChurchFinancesIncomeOtherCacheModel.fnIncomeOtherDescription;

		if ((fnIncomeOtherDescription != null) &&
				(fnIncomeOtherDescription.length() == 0)) {
			cExtChurchFinancesIncomeOtherCacheModel.fnIncomeOtherDescription = null;
		}

		cExtChurchFinancesIncomeOtherCacheModel.fnPriority = getFnPriority();

		return cExtChurchFinancesIncomeOtherCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{organizationId=");
		sb.append(getOrganizationId());
		sb.append(", cextChurchFinancesIncomeOtherId=");
		sb.append(getCextChurchFinancesIncomeOtherId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", fnIncomeOther=");
		sb.append(getFnIncomeOther());
		sb.append(", fnIncomeOtherDescription=");
		sb.append(getFnIncomeOtherDescription());
		sb.append(", fnPriority=");
		sb.append(getFnPriority());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("ucc.portal.model.CExtChurchFinancesIncomeOther");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cextChurchFinancesIncomeOtherId</column-name><column-value><![CDATA[");
		sb.append(getCextChurchFinancesIncomeOtherId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fnIncomeOther</column-name><column-value><![CDATA[");
		sb.append(getFnIncomeOther());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fnIncomeOtherDescription</column-name><column-value><![CDATA[");
		sb.append(getFnIncomeOtherDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fnPriority</column-name><column-value><![CDATA[");
		sb.append(getFnPriority());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CExtChurchFinancesIncomeOther.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CExtChurchFinancesIncomeOther.class, ModelWrapper.class
		};
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private long _cextChurchFinancesIncomeOtherId;
	private long _companyId;
	private long _userId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private int _fnIncomeOther;
	private String _fnIncomeOtherDescription;
	private double _fnPriority;
	private long _columnBitmask;
	private CExtChurchFinancesIncomeOther _escapedModel;
}