/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ucc.portal.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import ucc.portal.model.ExtValidation;
import ucc.portal.model.ExtValidationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ExtValidation service. Represents a row in the &quot;UCC_ExtValidation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ExtValidationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ExtValidationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ExtValidationImpl
 * @see ExtValidation
 * @see ExtValidationModel
 * @generated
 */
@ProviderType
public class ExtValidationModelImpl extends BaseModelImpl<ExtValidation>
	implements ExtValidationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ext validation model instance should use the {@link ExtValidation} interface instead.
	 */
	public static final String TABLE_NAME = "UCC_ExtValidation";
	public static final Object[][] TABLE_COLUMNS = {
			{ "extValidationId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "profileFileEntryId", Types.BIGINT },
			{ "profileFileVersionId", Types.BIGINT },
			{ "validatorUserId", Types.BIGINT },
			{ "emailDate", Types.TIMESTAMP },
			{ "currentStandingAndFitness", Types.BOOLEAN },
			{ "currentCriminalBackgroundCheck", Types.BOOLEAN },
			{ "accurateCurrentEmployment", Types.BOOLEAN },
			{ "accurateSelfDisclosure", Types.BOOLEAN },
			{ "signatureJson", Types.VARCHAR },
			{ "signatureFileEntryId", Types.BIGINT },
			{ "signatureFileVersionId", Types.BIGINT },
			{ "signatureName", Types.VARCHAR },
			{ "signatureTimestamp", Types.TIMESTAMP },
			{ "signatureTitle", Types.VARCHAR },
			{ "conferenceId", Types.BIGINT },
			{ "associationId", Types.BIGINT },
			{ "withholdValidation", Types.BOOLEAN },
			{ "additionalComments", Types.VARCHAR },
			{ "submitDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("extValidationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("profileFileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("profileFileVersionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("validatorUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("emailDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("currentStandingAndFitness", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("currentCriminalBackgroundCheck", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("accurateCurrentEmployment", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("accurateSelfDisclosure", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("signatureJson", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("signatureFileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("signatureFileVersionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("signatureName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("signatureTimestamp", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("signatureTitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("conferenceId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("associationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("withholdValidation", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("additionalComments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("submitDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table UCC_ExtValidation (extValidationId LONG not null primary key,companyId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,profileFileEntryId LONG,profileFileVersionId LONG,validatorUserId LONG,emailDate DATE null,currentStandingAndFitness BOOLEAN,currentCriminalBackgroundCheck BOOLEAN,accurateCurrentEmployment BOOLEAN,accurateSelfDisclosure BOOLEAN,signatureJson VARCHAR(75) null,signatureFileEntryId LONG,signatureFileVersionId LONG,signatureName VARCHAR(75) null,signatureTimestamp DATE null,signatureTitle VARCHAR(75) null,conferenceId LONG,associationId LONG,withholdValidation BOOLEAN,additionalComments VARCHAR(75) null,submitDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table UCC_ExtValidation";
	public static final String ORDER_BY_JPQL = " ORDER BY extValidation.emailDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY UCC_ExtValidation.emailDate DESC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "extSessionFactory";
	public static final String TX_MANAGER = "extTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.ucc.portal.model.ExtValidation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.ucc.portal.model.ExtValidation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.ucc.portal.model.ExtValidation"),
			true);
	public static final long PROFILEFILEENTRYID_COLUMN_BITMASK = 1L;
	public static final long USERID_COLUMN_BITMASK = 2L;
	public static final long VALIDATORUSERID_COLUMN_BITMASK = 4L;
	public static final long EMAILDATE_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(ucc.portal.service.util.ServiceProps.get(
				"lock.expiration.time.ucc.portal.model.ExtValidation"));

	public ExtValidationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _extValidationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setExtValidationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _extValidationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ExtValidation.class;
	}

	@Override
	public String getModelClassName() {
		return ExtValidation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("extValidationId", getExtValidationId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("profileFileEntryId", getProfileFileEntryId());
		attributes.put("profileFileVersionId", getProfileFileVersionId());
		attributes.put("validatorUserId", getValidatorUserId());
		attributes.put("emailDate", getEmailDate());
		attributes.put("currentStandingAndFitness",
			isCurrentStandingAndFitness());
		attributes.put("currentCriminalBackgroundCheck",
			isCurrentCriminalBackgroundCheck());
		attributes.put("accurateCurrentEmployment",
			isAccurateCurrentEmployment());
		attributes.put("accurateSelfDisclosure", isAccurateSelfDisclosure());
		attributes.put("signatureJson", getSignatureJson());
		attributes.put("signatureFileEntryId", getSignatureFileEntryId());
		attributes.put("signatureFileVersionId", getSignatureFileVersionId());
		attributes.put("signatureName", getSignatureName());
		attributes.put("signatureTimestamp", getSignatureTimestamp());
		attributes.put("signatureTitle", getSignatureTitle());
		attributes.put("conferenceId", getConferenceId());
		attributes.put("associationId", getAssociationId());
		attributes.put("withholdValidation", isWithholdValidation());
		attributes.put("additionalComments", getAdditionalComments());
		attributes.put("submitDate", getSubmitDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long extValidationId = (Long)attributes.get("extValidationId");

		if (extValidationId != null) {
			setExtValidationId(extValidationId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long profileFileEntryId = (Long)attributes.get("profileFileEntryId");

		if (profileFileEntryId != null) {
			setProfileFileEntryId(profileFileEntryId);
		}

		Long profileFileVersionId = (Long)attributes.get("profileFileVersionId");

		if (profileFileVersionId != null) {
			setProfileFileVersionId(profileFileVersionId);
		}

		Long validatorUserId = (Long)attributes.get("validatorUserId");

		if (validatorUserId != null) {
			setValidatorUserId(validatorUserId);
		}

		Date emailDate = (Date)attributes.get("emailDate");

		if (emailDate != null) {
			setEmailDate(emailDate);
		}

		Boolean currentStandingAndFitness = (Boolean)attributes.get(
				"currentStandingAndFitness");

		if (currentStandingAndFitness != null) {
			setCurrentStandingAndFitness(currentStandingAndFitness);
		}

		Boolean currentCriminalBackgroundCheck = (Boolean)attributes.get(
				"currentCriminalBackgroundCheck");

		if (currentCriminalBackgroundCheck != null) {
			setCurrentCriminalBackgroundCheck(currentCriminalBackgroundCheck);
		}

		Boolean accurateCurrentEmployment = (Boolean)attributes.get(
				"accurateCurrentEmployment");

		if (accurateCurrentEmployment != null) {
			setAccurateCurrentEmployment(accurateCurrentEmployment);
		}

		Boolean accurateSelfDisclosure = (Boolean)attributes.get(
				"accurateSelfDisclosure");

		if (accurateSelfDisclosure != null) {
			setAccurateSelfDisclosure(accurateSelfDisclosure);
		}

		String signatureJson = (String)attributes.get("signatureJson");

		if (signatureJson != null) {
			setSignatureJson(signatureJson);
		}

		Long signatureFileEntryId = (Long)attributes.get("signatureFileEntryId");

		if (signatureFileEntryId != null) {
			setSignatureFileEntryId(signatureFileEntryId);
		}

		Long signatureFileVersionId = (Long)attributes.get(
				"signatureFileVersionId");

		if (signatureFileVersionId != null) {
			setSignatureFileVersionId(signatureFileVersionId);
		}

		String signatureName = (String)attributes.get("signatureName");

		if (signatureName != null) {
			setSignatureName(signatureName);
		}

		Date signatureTimestamp = (Date)attributes.get("signatureTimestamp");

		if (signatureTimestamp != null) {
			setSignatureTimestamp(signatureTimestamp);
		}

		String signatureTitle = (String)attributes.get("signatureTitle");

		if (signatureTitle != null) {
			setSignatureTitle(signatureTitle);
		}

		Long conferenceId = (Long)attributes.get("conferenceId");

		if (conferenceId != null) {
			setConferenceId(conferenceId);
		}

		Long associationId = (Long)attributes.get("associationId");

		if (associationId != null) {
			setAssociationId(associationId);
		}

		Boolean withholdValidation = (Boolean)attributes.get(
				"withholdValidation");

		if (withholdValidation != null) {
			setWithholdValidation(withholdValidation);
		}

		String additionalComments = (String)attributes.get("additionalComments");

		if (additionalComments != null) {
			setAdditionalComments(additionalComments);
		}

		Date submitDate = (Date)attributes.get("submitDate");

		if (submitDate != null) {
			setSubmitDate(submitDate);
		}
	}

	@Override
	public long getExtValidationId() {
		return _extValidationId;
	}

	@Override
	public void setExtValidationId(long extValidationId) {
		_extValidationId = extValidationId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getProfileFileEntryId() {
		return _profileFileEntryId;
	}

	@Override
	public void setProfileFileEntryId(long profileFileEntryId) {
		_columnBitmask |= PROFILEFILEENTRYID_COLUMN_BITMASK;

		if (!_setOriginalProfileFileEntryId) {
			_setOriginalProfileFileEntryId = true;

			_originalProfileFileEntryId = _profileFileEntryId;
		}

		_profileFileEntryId = profileFileEntryId;
	}

	public long getOriginalProfileFileEntryId() {
		return _originalProfileFileEntryId;
	}

	@Override
	public long getProfileFileVersionId() {
		return _profileFileVersionId;
	}

	@Override
	public void setProfileFileVersionId(long profileFileVersionId) {
		_profileFileVersionId = profileFileVersionId;
	}

	@Override
	public long getValidatorUserId() {
		return _validatorUserId;
	}

	@Override
	public void setValidatorUserId(long validatorUserId) {
		_columnBitmask |= VALIDATORUSERID_COLUMN_BITMASK;

		if (!_setOriginalValidatorUserId) {
			_setOriginalValidatorUserId = true;

			_originalValidatorUserId = _validatorUserId;
		}

		_validatorUserId = validatorUserId;
	}

	@Override
	public String getValidatorUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getValidatorUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setValidatorUserUuid(String validatorUserUuid) {
	}

	public long getOriginalValidatorUserId() {
		return _originalValidatorUserId;
	}

	@Override
	public Date getEmailDate() {
		return _emailDate;
	}

	@Override
	public void setEmailDate(Date emailDate) {
		_columnBitmask = -1L;

		_emailDate = emailDate;
	}

	@Override
	public boolean getCurrentStandingAndFitness() {
		return _currentStandingAndFitness;
	}

	@Override
	public boolean isCurrentStandingAndFitness() {
		return _currentStandingAndFitness;
	}

	@Override
	public void setCurrentStandingAndFitness(boolean currentStandingAndFitness) {
		_currentStandingAndFitness = currentStandingAndFitness;
	}

	@Override
	public boolean getCurrentCriminalBackgroundCheck() {
		return _currentCriminalBackgroundCheck;
	}

	@Override
	public boolean isCurrentCriminalBackgroundCheck() {
		return _currentCriminalBackgroundCheck;
	}

	@Override
	public void setCurrentCriminalBackgroundCheck(
		boolean currentCriminalBackgroundCheck) {
		_currentCriminalBackgroundCheck = currentCriminalBackgroundCheck;
	}

	@Override
	public boolean getAccurateCurrentEmployment() {
		return _accurateCurrentEmployment;
	}

	@Override
	public boolean isAccurateCurrentEmployment() {
		return _accurateCurrentEmployment;
	}

	@Override
	public void setAccurateCurrentEmployment(boolean accurateCurrentEmployment) {
		_accurateCurrentEmployment = accurateCurrentEmployment;
	}

	@Override
	public boolean getAccurateSelfDisclosure() {
		return _accurateSelfDisclosure;
	}

	@Override
	public boolean isAccurateSelfDisclosure() {
		return _accurateSelfDisclosure;
	}

	@Override
	public void setAccurateSelfDisclosure(boolean accurateSelfDisclosure) {
		_accurateSelfDisclosure = accurateSelfDisclosure;
	}

	@Override
	public String getSignatureJson() {
		if (_signatureJson == null) {
			return "";
		}
		else {
			return _signatureJson;
		}
	}

	@Override
	public void setSignatureJson(String signatureJson) {
		_signatureJson = signatureJson;
	}

	@Override
	public long getSignatureFileEntryId() {
		return _signatureFileEntryId;
	}

	@Override
	public void setSignatureFileEntryId(long signatureFileEntryId) {
		_signatureFileEntryId = signatureFileEntryId;
	}

	@Override
	public long getSignatureFileVersionId() {
		return _signatureFileVersionId;
	}

	@Override
	public void setSignatureFileVersionId(long signatureFileVersionId) {
		_signatureFileVersionId = signatureFileVersionId;
	}

	@Override
	public String getSignatureName() {
		if (_signatureName == null) {
			return "";
		}
		else {
			return _signatureName;
		}
	}

	@Override
	public void setSignatureName(String signatureName) {
		_signatureName = signatureName;
	}

	@Override
	public Date getSignatureTimestamp() {
		return _signatureTimestamp;
	}

	@Override
	public void setSignatureTimestamp(Date signatureTimestamp) {
		_signatureTimestamp = signatureTimestamp;
	}

	@Override
	public String getSignatureTitle() {
		if (_signatureTitle == null) {
			return "";
		}
		else {
			return _signatureTitle;
		}
	}

	@Override
	public void setSignatureTitle(String signatureTitle) {
		_signatureTitle = signatureTitle;
	}

	@Override
	public long getConferenceId() {
		return _conferenceId;
	}

	@Override
	public void setConferenceId(long conferenceId) {
		_conferenceId = conferenceId;
	}

	@Override
	public long getAssociationId() {
		return _associationId;
	}

	@Override
	public void setAssociationId(long associationId) {
		_associationId = associationId;
	}

	@Override
	public boolean getWithholdValidation() {
		return _withholdValidation;
	}

	@Override
	public boolean isWithholdValidation() {
		return _withholdValidation;
	}

	@Override
	public void setWithholdValidation(boolean withholdValidation) {
		_withholdValidation = withholdValidation;
	}

	@Override
	public String getAdditionalComments() {
		if (_additionalComments == null) {
			return "";
		}
		else {
			return _additionalComments;
		}
	}

	@Override
	public void setAdditionalComments(String additionalComments) {
		_additionalComments = additionalComments;
	}

	@Override
	public Date getSubmitDate() {
		return _submitDate;
	}

	@Override
	public void setSubmitDate(Date submitDate) {
		_submitDate = submitDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ExtValidation.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ExtValidation toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ExtValidation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ExtValidationImpl extValidationImpl = new ExtValidationImpl();

		extValidationImpl.setExtValidationId(getExtValidationId());
		extValidationImpl.setCompanyId(getCompanyId());
		extValidationImpl.setUserId(getUserId());
		extValidationImpl.setCreateDate(getCreateDate());
		extValidationImpl.setModifiedDate(getModifiedDate());
		extValidationImpl.setProfileFileEntryId(getProfileFileEntryId());
		extValidationImpl.setProfileFileVersionId(getProfileFileVersionId());
		extValidationImpl.setValidatorUserId(getValidatorUserId());
		extValidationImpl.setEmailDate(getEmailDate());
		extValidationImpl.setCurrentStandingAndFitness(isCurrentStandingAndFitness());
		extValidationImpl.setCurrentCriminalBackgroundCheck(isCurrentCriminalBackgroundCheck());
		extValidationImpl.setAccurateCurrentEmployment(isAccurateCurrentEmployment());
		extValidationImpl.setAccurateSelfDisclosure(isAccurateSelfDisclosure());
		extValidationImpl.setSignatureJson(getSignatureJson());
		extValidationImpl.setSignatureFileEntryId(getSignatureFileEntryId());
		extValidationImpl.setSignatureFileVersionId(getSignatureFileVersionId());
		extValidationImpl.setSignatureName(getSignatureName());
		extValidationImpl.setSignatureTimestamp(getSignatureTimestamp());
		extValidationImpl.setSignatureTitle(getSignatureTitle());
		extValidationImpl.setConferenceId(getConferenceId());
		extValidationImpl.setAssociationId(getAssociationId());
		extValidationImpl.setWithholdValidation(isWithholdValidation());
		extValidationImpl.setAdditionalComments(getAdditionalComments());
		extValidationImpl.setSubmitDate(getSubmitDate());

		extValidationImpl.resetOriginalValues();

		return extValidationImpl;
	}

	@Override
	public int compareTo(ExtValidation extValidation) {
		int value = 0;

		value = DateUtil.compareTo(getEmailDate(), extValidation.getEmailDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ExtValidation)) {
			return false;
		}

		ExtValidation extValidation = (ExtValidation)obj;

		long primaryKey = extValidation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ExtValidationModelImpl extValidationModelImpl = this;

		extValidationModelImpl._originalUserId = extValidationModelImpl._userId;

		extValidationModelImpl._setOriginalUserId = false;

		extValidationModelImpl._setModifiedDate = false;

		extValidationModelImpl._originalProfileFileEntryId = extValidationModelImpl._profileFileEntryId;

		extValidationModelImpl._setOriginalProfileFileEntryId = false;

		extValidationModelImpl._originalValidatorUserId = extValidationModelImpl._validatorUserId;

		extValidationModelImpl._setOriginalValidatorUserId = false;

		extValidationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ExtValidation> toCacheModel() {
		ExtValidationCacheModel extValidationCacheModel = new ExtValidationCacheModel();

		extValidationCacheModel.extValidationId = getExtValidationId();

		extValidationCacheModel.companyId = getCompanyId();

		extValidationCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			extValidationCacheModel.createDate = createDate.getTime();
		}
		else {
			extValidationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			extValidationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			extValidationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		extValidationCacheModel.profileFileEntryId = getProfileFileEntryId();

		extValidationCacheModel.profileFileVersionId = getProfileFileVersionId();

		extValidationCacheModel.validatorUserId = getValidatorUserId();

		Date emailDate = getEmailDate();

		if (emailDate != null) {
			extValidationCacheModel.emailDate = emailDate.getTime();
		}
		else {
			extValidationCacheModel.emailDate = Long.MIN_VALUE;
		}

		extValidationCacheModel.currentStandingAndFitness = isCurrentStandingAndFitness();

		extValidationCacheModel.currentCriminalBackgroundCheck = isCurrentCriminalBackgroundCheck();

		extValidationCacheModel.accurateCurrentEmployment = isAccurateCurrentEmployment();

		extValidationCacheModel.accurateSelfDisclosure = isAccurateSelfDisclosure();

		extValidationCacheModel.signatureJson = getSignatureJson();

		String signatureJson = extValidationCacheModel.signatureJson;

		if ((signatureJson != null) && (signatureJson.length() == 0)) {
			extValidationCacheModel.signatureJson = null;
		}

		extValidationCacheModel.signatureFileEntryId = getSignatureFileEntryId();

		extValidationCacheModel.signatureFileVersionId = getSignatureFileVersionId();

		extValidationCacheModel.signatureName = getSignatureName();

		String signatureName = extValidationCacheModel.signatureName;

		if ((signatureName != null) && (signatureName.length() == 0)) {
			extValidationCacheModel.signatureName = null;
		}

		Date signatureTimestamp = getSignatureTimestamp();

		if (signatureTimestamp != null) {
			extValidationCacheModel.signatureTimestamp = signatureTimestamp.getTime();
		}
		else {
			extValidationCacheModel.signatureTimestamp = Long.MIN_VALUE;
		}

		extValidationCacheModel.signatureTitle = getSignatureTitle();

		String signatureTitle = extValidationCacheModel.signatureTitle;

		if ((signatureTitle != null) && (signatureTitle.length() == 0)) {
			extValidationCacheModel.signatureTitle = null;
		}

		extValidationCacheModel.conferenceId = getConferenceId();

		extValidationCacheModel.associationId = getAssociationId();

		extValidationCacheModel.withholdValidation = isWithholdValidation();

		extValidationCacheModel.additionalComments = getAdditionalComments();

		String additionalComments = extValidationCacheModel.additionalComments;

		if ((additionalComments != null) && (additionalComments.length() == 0)) {
			extValidationCacheModel.additionalComments = null;
		}

		Date submitDate = getSubmitDate();

		if (submitDate != null) {
			extValidationCacheModel.submitDate = submitDate.getTime();
		}
		else {
			extValidationCacheModel.submitDate = Long.MIN_VALUE;
		}

		return extValidationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(49);

		sb.append("{extValidationId=");
		sb.append(getExtValidationId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", profileFileEntryId=");
		sb.append(getProfileFileEntryId());
		sb.append(", profileFileVersionId=");
		sb.append(getProfileFileVersionId());
		sb.append(", validatorUserId=");
		sb.append(getValidatorUserId());
		sb.append(", emailDate=");
		sb.append(getEmailDate());
		sb.append(", currentStandingAndFitness=");
		sb.append(isCurrentStandingAndFitness());
		sb.append(", currentCriminalBackgroundCheck=");
		sb.append(isCurrentCriminalBackgroundCheck());
		sb.append(", accurateCurrentEmployment=");
		sb.append(isAccurateCurrentEmployment());
		sb.append(", accurateSelfDisclosure=");
		sb.append(isAccurateSelfDisclosure());
		sb.append(", signatureJson=");
		sb.append(getSignatureJson());
		sb.append(", signatureFileEntryId=");
		sb.append(getSignatureFileEntryId());
		sb.append(", signatureFileVersionId=");
		sb.append(getSignatureFileVersionId());
		sb.append(", signatureName=");
		sb.append(getSignatureName());
		sb.append(", signatureTimestamp=");
		sb.append(getSignatureTimestamp());
		sb.append(", signatureTitle=");
		sb.append(getSignatureTitle());
		sb.append(", conferenceId=");
		sb.append(getConferenceId());
		sb.append(", associationId=");
		sb.append(getAssociationId());
		sb.append(", withholdValidation=");
		sb.append(isWithholdValidation());
		sb.append(", additionalComments=");
		sb.append(getAdditionalComments());
		sb.append(", submitDate=");
		sb.append(getSubmitDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(76);

		sb.append("<model><model-name>");
		sb.append("ucc.portal.model.ExtValidation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>extValidationId</column-name><column-value><![CDATA[");
		sb.append(getExtValidationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>profileFileEntryId</column-name><column-value><![CDATA[");
		sb.append(getProfileFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>profileFileVersionId</column-name><column-value><![CDATA[");
		sb.append(getProfileFileVersionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>validatorUserId</column-name><column-value><![CDATA[");
		sb.append(getValidatorUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailDate</column-name><column-value><![CDATA[");
		sb.append(getEmailDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currentStandingAndFitness</column-name><column-value><![CDATA[");
		sb.append(isCurrentStandingAndFitness());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currentCriminalBackgroundCheck</column-name><column-value><![CDATA[");
		sb.append(isCurrentCriminalBackgroundCheck());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accurateCurrentEmployment</column-name><column-value><![CDATA[");
		sb.append(isAccurateCurrentEmployment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accurateSelfDisclosure</column-name><column-value><![CDATA[");
		sb.append(isAccurateSelfDisclosure());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signatureJson</column-name><column-value><![CDATA[");
		sb.append(getSignatureJson());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signatureFileEntryId</column-name><column-value><![CDATA[");
		sb.append(getSignatureFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signatureFileVersionId</column-name><column-value><![CDATA[");
		sb.append(getSignatureFileVersionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signatureName</column-name><column-value><![CDATA[");
		sb.append(getSignatureName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signatureTimestamp</column-name><column-value><![CDATA[");
		sb.append(getSignatureTimestamp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signatureTitle</column-name><column-value><![CDATA[");
		sb.append(getSignatureTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>conferenceId</column-name><column-value><![CDATA[");
		sb.append(getConferenceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>associationId</column-name><column-value><![CDATA[");
		sb.append(getAssociationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>withholdValidation</column-name><column-value><![CDATA[");
		sb.append(isWithholdValidation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>additionalComments</column-name><column-value><![CDATA[");
		sb.append(getAdditionalComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>submitDate</column-name><column-value><![CDATA[");
		sb.append(getSubmitDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ExtValidation.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ExtValidation.class, ModelWrapper.class
		};
	private long _extValidationId;
	private long _companyId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _profileFileEntryId;
	private long _originalProfileFileEntryId;
	private boolean _setOriginalProfileFileEntryId;
	private long _profileFileVersionId;
	private long _validatorUserId;
	private long _originalValidatorUserId;
	private boolean _setOriginalValidatorUserId;
	private Date _emailDate;
	private boolean _currentStandingAndFitness;
	private boolean _currentCriminalBackgroundCheck;
	private boolean _accurateCurrentEmployment;
	private boolean _accurateSelfDisclosure;
	private String _signatureJson;
	private long _signatureFileEntryId;
	private long _signatureFileVersionId;
	private String _signatureName;
	private Date _signatureTimestamp;
	private String _signatureTitle;
	private long _conferenceId;
	private long _associationId;
	private boolean _withholdValidation;
	private String _additionalComments;
	private Date _submitDate;
	private long _columnBitmask;
	private ExtValidation _escapedModel;
}