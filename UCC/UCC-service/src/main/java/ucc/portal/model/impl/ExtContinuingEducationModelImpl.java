/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ucc.portal.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import ucc.portal.model.ExtContinuingEducation;
import ucc.portal.model.ExtContinuingEducationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ExtContinuingEducation service. Represents a row in the &quot;UCC_ExtContinuingEducation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ExtContinuingEducationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ExtContinuingEducationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ExtContinuingEducationImpl
 * @see ExtContinuingEducation
 * @see ExtContinuingEducationModel
 * @generated
 */
@ProviderType
public class ExtContinuingEducationModelImpl extends BaseModelImpl<ExtContinuingEducation>
	implements ExtContinuingEducationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ext continuing education model instance should use the {@link ExtContinuingEducation} interface instead.
	 */
	public static final String TABLE_NAME = "UCC_ExtContinuingEducation";
	public static final Object[][] TABLE_COLUMNS = {
			{ "extContinuingEducationId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "institutionOrProgram", Types.VARCHAR },
			{ "city", Types.VARCHAR },
			{ "regionId", Types.BIGINT },
			{ "countryId", Types.BIGINT },
			{ "startDateOfAttendance", Types.TIMESTAMP },
			{ "endDateOfAttendance", Types.TIMESTAMP },
			{ "degreeOrCertification", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("extContinuingEducationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("institutionOrProgram", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("city", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("regionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("countryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("startDateOfAttendance", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("endDateOfAttendance", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("degreeOrCertification", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table UCC_ExtContinuingEducation (extContinuingEducationId LONG not null primary key,companyId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,institutionOrProgram VARCHAR(75) null,city VARCHAR(75) null,regionId LONG,countryId LONG,startDateOfAttendance DATE null,endDateOfAttendance DATE null,degreeOrCertification VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table UCC_ExtContinuingEducation";
	public static final String ORDER_BY_JPQL = " ORDER BY extContinuingEducation.startDateOfAttendance ASC";
	public static final String ORDER_BY_SQL = " ORDER BY UCC_ExtContinuingEducation.startDateOfAttendance ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "extSessionFactory";
	public static final String TX_MANAGER = "extTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.ucc.portal.model.ExtContinuingEducation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.ucc.portal.model.ExtContinuingEducation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.ucc.portal.model.ExtContinuingEducation"),
			true);
	public static final long USERID_COLUMN_BITMASK = 1L;
	public static final long STARTDATEOFATTENDANCE_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(ucc.portal.service.util.ServiceProps.get(
				"lock.expiration.time.ucc.portal.model.ExtContinuingEducation"));

	public ExtContinuingEducationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _extContinuingEducationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setExtContinuingEducationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _extContinuingEducationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ExtContinuingEducation.class;
	}

	@Override
	public String getModelClassName() {
		return ExtContinuingEducation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("extContinuingEducationId", getExtContinuingEducationId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("institutionOrProgram", getInstitutionOrProgram());
		attributes.put("city", getCity());
		attributes.put("regionId", getRegionId());
		attributes.put("countryId", getCountryId());
		attributes.put("startDateOfAttendance", getStartDateOfAttendance());
		attributes.put("endDateOfAttendance", getEndDateOfAttendance());
		attributes.put("degreeOrCertification", getDegreeOrCertification());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long extContinuingEducationId = (Long)attributes.get(
				"extContinuingEducationId");

		if (extContinuingEducationId != null) {
			setExtContinuingEducationId(extContinuingEducationId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String institutionOrProgram = (String)attributes.get(
				"institutionOrProgram");

		if (institutionOrProgram != null) {
			setInstitutionOrProgram(institutionOrProgram);
		}

		String city = (String)attributes.get("city");

		if (city != null) {
			setCity(city);
		}

		Long regionId = (Long)attributes.get("regionId");

		if (regionId != null) {
			setRegionId(regionId);
		}

		Long countryId = (Long)attributes.get("countryId");

		if (countryId != null) {
			setCountryId(countryId);
		}

		Date startDateOfAttendance = (Date)attributes.get(
				"startDateOfAttendance");

		if (startDateOfAttendance != null) {
			setStartDateOfAttendance(startDateOfAttendance);
		}

		Date endDateOfAttendance = (Date)attributes.get("endDateOfAttendance");

		if (endDateOfAttendance != null) {
			setEndDateOfAttendance(endDateOfAttendance);
		}

		String degreeOrCertification = (String)attributes.get(
				"degreeOrCertification");

		if (degreeOrCertification != null) {
			setDegreeOrCertification(degreeOrCertification);
		}
	}

	@Override
	public long getExtContinuingEducationId() {
		return _extContinuingEducationId;
	}

	@Override
	public void setExtContinuingEducationId(long extContinuingEducationId) {
		_extContinuingEducationId = extContinuingEducationId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getInstitutionOrProgram() {
		if (_institutionOrProgram == null) {
			return "";
		}
		else {
			return _institutionOrProgram;
		}
	}

	@Override
	public void setInstitutionOrProgram(String institutionOrProgram) {
		_institutionOrProgram = institutionOrProgram;
	}

	@Override
	public String getCity() {
		if (_city == null) {
			return "";
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		_city = city;
	}

	@Override
	public long getRegionId() {
		return _regionId;
	}

	@Override
	public void setRegionId(long regionId) {
		_regionId = regionId;
	}

	@Override
	public long getCountryId() {
		return _countryId;
	}

	@Override
	public void setCountryId(long countryId) {
		_countryId = countryId;
	}

	@Override
	public Date getStartDateOfAttendance() {
		return _startDateOfAttendance;
	}

	@Override
	public void setStartDateOfAttendance(Date startDateOfAttendance) {
		_columnBitmask = -1L;

		_startDateOfAttendance = startDateOfAttendance;
	}

	@Override
	public Date getEndDateOfAttendance() {
		return _endDateOfAttendance;
	}

	@Override
	public void setEndDateOfAttendance(Date endDateOfAttendance) {
		_endDateOfAttendance = endDateOfAttendance;
	}

	@Override
	public String getDegreeOrCertification() {
		if (_degreeOrCertification == null) {
			return "";
		}
		else {
			return _degreeOrCertification;
		}
	}

	@Override
	public void setDegreeOrCertification(String degreeOrCertification) {
		_degreeOrCertification = degreeOrCertification;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ExtContinuingEducation.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ExtContinuingEducation toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ExtContinuingEducation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ExtContinuingEducationImpl extContinuingEducationImpl = new ExtContinuingEducationImpl();

		extContinuingEducationImpl.setExtContinuingEducationId(getExtContinuingEducationId());
		extContinuingEducationImpl.setCompanyId(getCompanyId());
		extContinuingEducationImpl.setUserId(getUserId());
		extContinuingEducationImpl.setCreateDate(getCreateDate());
		extContinuingEducationImpl.setModifiedDate(getModifiedDate());
		extContinuingEducationImpl.setInstitutionOrProgram(getInstitutionOrProgram());
		extContinuingEducationImpl.setCity(getCity());
		extContinuingEducationImpl.setRegionId(getRegionId());
		extContinuingEducationImpl.setCountryId(getCountryId());
		extContinuingEducationImpl.setStartDateOfAttendance(getStartDateOfAttendance());
		extContinuingEducationImpl.setEndDateOfAttendance(getEndDateOfAttendance());
		extContinuingEducationImpl.setDegreeOrCertification(getDegreeOrCertification());

		extContinuingEducationImpl.resetOriginalValues();

		return extContinuingEducationImpl;
	}

	@Override
	public int compareTo(ExtContinuingEducation extContinuingEducation) {
		int value = 0;

		value = DateUtil.compareTo(getStartDateOfAttendance(),
				extContinuingEducation.getStartDateOfAttendance());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ExtContinuingEducation)) {
			return false;
		}

		ExtContinuingEducation extContinuingEducation = (ExtContinuingEducation)obj;

		long primaryKey = extContinuingEducation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ExtContinuingEducationModelImpl extContinuingEducationModelImpl = this;

		extContinuingEducationModelImpl._originalUserId = extContinuingEducationModelImpl._userId;

		extContinuingEducationModelImpl._setOriginalUserId = false;

		extContinuingEducationModelImpl._setModifiedDate = false;

		extContinuingEducationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ExtContinuingEducation> toCacheModel() {
		ExtContinuingEducationCacheModel extContinuingEducationCacheModel = new ExtContinuingEducationCacheModel();

		extContinuingEducationCacheModel.extContinuingEducationId = getExtContinuingEducationId();

		extContinuingEducationCacheModel.companyId = getCompanyId();

		extContinuingEducationCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			extContinuingEducationCacheModel.createDate = createDate.getTime();
		}
		else {
			extContinuingEducationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			extContinuingEducationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			extContinuingEducationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		extContinuingEducationCacheModel.institutionOrProgram = getInstitutionOrProgram();

		String institutionOrProgram = extContinuingEducationCacheModel.institutionOrProgram;

		if ((institutionOrProgram != null) &&
				(institutionOrProgram.length() == 0)) {
			extContinuingEducationCacheModel.institutionOrProgram = null;
		}

		extContinuingEducationCacheModel.city = getCity();

		String city = extContinuingEducationCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			extContinuingEducationCacheModel.city = null;
		}

		extContinuingEducationCacheModel.regionId = getRegionId();

		extContinuingEducationCacheModel.countryId = getCountryId();

		Date startDateOfAttendance = getStartDateOfAttendance();

		if (startDateOfAttendance != null) {
			extContinuingEducationCacheModel.startDateOfAttendance = startDateOfAttendance.getTime();
		}
		else {
			extContinuingEducationCacheModel.startDateOfAttendance = Long.MIN_VALUE;
		}

		Date endDateOfAttendance = getEndDateOfAttendance();

		if (endDateOfAttendance != null) {
			extContinuingEducationCacheModel.endDateOfAttendance = endDateOfAttendance.getTime();
		}
		else {
			extContinuingEducationCacheModel.endDateOfAttendance = Long.MIN_VALUE;
		}

		extContinuingEducationCacheModel.degreeOrCertification = getDegreeOrCertification();

		String degreeOrCertification = extContinuingEducationCacheModel.degreeOrCertification;

		if ((degreeOrCertification != null) &&
				(degreeOrCertification.length() == 0)) {
			extContinuingEducationCacheModel.degreeOrCertification = null;
		}

		return extContinuingEducationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{extContinuingEducationId=");
		sb.append(getExtContinuingEducationId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", institutionOrProgram=");
		sb.append(getInstitutionOrProgram());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", regionId=");
		sb.append(getRegionId());
		sb.append(", countryId=");
		sb.append(getCountryId());
		sb.append(", startDateOfAttendance=");
		sb.append(getStartDateOfAttendance());
		sb.append(", endDateOfAttendance=");
		sb.append(getEndDateOfAttendance());
		sb.append(", degreeOrCertification=");
		sb.append(getDegreeOrCertification());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("ucc.portal.model.ExtContinuingEducation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>extContinuingEducationId</column-name><column-value><![CDATA[");
		sb.append(getExtContinuingEducationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>institutionOrProgram</column-name><column-value><![CDATA[");
		sb.append(getInstitutionOrProgram());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>regionId</column-name><column-value><![CDATA[");
		sb.append(getRegionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryId</column-name><column-value><![CDATA[");
		sb.append(getCountryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDateOfAttendance</column-name><column-value><![CDATA[");
		sb.append(getStartDateOfAttendance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDateOfAttendance</column-name><column-value><![CDATA[");
		sb.append(getEndDateOfAttendance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>degreeOrCertification</column-name><column-value><![CDATA[");
		sb.append(getDegreeOrCertification());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ExtContinuingEducation.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ExtContinuingEducation.class, ModelWrapper.class
		};
	private long _extContinuingEducationId;
	private long _companyId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _institutionOrProgram;
	private String _city;
	private long _regionId;
	private long _countryId;
	private Date _startDateOfAttendance;
	private Date _endDateOfAttendance;
	private String _degreeOrCertification;
	private long _columnBitmask;
	private ExtContinuingEducation _escapedModel;
}