/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ucc.portal.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import ucc.portal.model.CExtRealEstateCampaign;
import ucc.portal.model.CExtRealEstateCampaignModel;

import ucc.portal.service.persistence.CExtRealEstateCampaignPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CExtRealEstateCampaign service. Represents a row in the &quot;UCC_CExtRealEstateCampaign&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CExtRealEstateCampaignModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CExtRealEstateCampaignImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CExtRealEstateCampaignImpl
 * @see CExtRealEstateCampaign
 * @see CExtRealEstateCampaignModel
 * @generated
 */
@ProviderType
public class CExtRealEstateCampaignModelImpl extends BaseModelImpl<CExtRealEstateCampaign>
	implements CExtRealEstateCampaignModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a c ext real estate campaign model instance should use the {@link CExtRealEstateCampaign} interface instead.
	 */
	public static final String TABLE_NAME = "UCC_CExtRealEstateCampaign";
	public static final Object[][] TABLE_COLUMNS = {
			{ "organizationId", Types.BIGINT },
			{ "cextRealEstateCampaignId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "reYear", Types.INTEGER },
			{ "reUnderwayAnticipated", Types.BOOLEAN },
			{ "reGoal", Types.INTEGER },
			{ "reResult", Types.INTEGER },
			{ "rePurpose", Types.VARCHAR },
			{ "reImpact", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("organizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("cextRealEstateCampaignId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("reYear", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("reUnderwayAnticipated", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("reGoal", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("reResult", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("rePurpose", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("reImpact", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table UCC_CExtRealEstateCampaign (organizationId LONG not null,cextRealEstateCampaignId LONG not null,companyId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,reYear INTEGER,reUnderwayAnticipated BOOLEAN,reGoal INTEGER,reResult INTEGER,rePurpose VARCHAR(75) null,reImpact VARCHAR(75) null,primary key (organizationId, cextRealEstateCampaignId))";
	public static final String TABLE_SQL_DROP = "drop table UCC_CExtRealEstateCampaign";
	public static final String ORDER_BY_JPQL = " ORDER BY cExtRealEstateCampaign.reYear ASC";
	public static final String ORDER_BY_SQL = " ORDER BY UCC_CExtRealEstateCampaign.reYear ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "extSessionFactory";
	public static final String TX_MANAGER = "extTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.ucc.portal.model.CExtRealEstateCampaign"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.ucc.portal.model.CExtRealEstateCampaign"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.ucc.portal.model.CExtRealEstateCampaign"),
			true);
	public static final long ORGANIZATIONID_COLUMN_BITMASK = 1L;
	public static final long REYEAR_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(ucc.portal.service.util.ServiceProps.get(
				"lock.expiration.time.ucc.portal.model.CExtRealEstateCampaign"));

	public CExtRealEstateCampaignModelImpl() {
	}

	@Override
	public CExtRealEstateCampaignPK getPrimaryKey() {
		return new CExtRealEstateCampaignPK(_organizationId,
			_cextRealEstateCampaignId);
	}

	@Override
	public void setPrimaryKey(CExtRealEstateCampaignPK primaryKey) {
		setOrganizationId(primaryKey.organizationId);
		setCextRealEstateCampaignId(primaryKey.cextRealEstateCampaignId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new CExtRealEstateCampaignPK(_organizationId,
			_cextRealEstateCampaignId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((CExtRealEstateCampaignPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return CExtRealEstateCampaign.class;
	}

	@Override
	public String getModelClassName() {
		return CExtRealEstateCampaign.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("organizationId", getOrganizationId());
		attributes.put("cextRealEstateCampaignId", getCextRealEstateCampaignId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("reYear", getReYear());
		attributes.put("reUnderwayAnticipated", isReUnderwayAnticipated());
		attributes.put("reGoal", getReGoal());
		attributes.put("reResult", getReResult());
		attributes.put("rePurpose", getRePurpose());
		attributes.put("reImpact", getReImpact());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		Long cextRealEstateCampaignId = (Long)attributes.get(
				"cextRealEstateCampaignId");

		if (cextRealEstateCampaignId != null) {
			setCextRealEstateCampaignId(cextRealEstateCampaignId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer reYear = (Integer)attributes.get("reYear");

		if (reYear != null) {
			setReYear(reYear);
		}

		Boolean reUnderwayAnticipated = (Boolean)attributes.get(
				"reUnderwayAnticipated");

		if (reUnderwayAnticipated != null) {
			setReUnderwayAnticipated(reUnderwayAnticipated);
		}

		Integer reGoal = (Integer)attributes.get("reGoal");

		if (reGoal != null) {
			setReGoal(reGoal);
		}

		Integer reResult = (Integer)attributes.get("reResult");

		if (reResult != null) {
			setReResult(reResult);
		}

		String rePurpose = (String)attributes.get("rePurpose");

		if (rePurpose != null) {
			setRePurpose(rePurpose);
		}

		String reImpact = (String)attributes.get("reImpact");

		if (reImpact != null) {
			setReImpact(reImpact);
		}
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask |= ORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	@Override
	public long getCextRealEstateCampaignId() {
		return _cextRealEstateCampaignId;
	}

	@Override
	public void setCextRealEstateCampaignId(long cextRealEstateCampaignId) {
		_cextRealEstateCampaignId = cextRealEstateCampaignId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public int getReYear() {
		return _reYear;
	}

	@Override
	public void setReYear(int reYear) {
		_columnBitmask = -1L;

		_reYear = reYear;
	}

	@Override
	public boolean getReUnderwayAnticipated() {
		return _reUnderwayAnticipated;
	}

	@Override
	public boolean isReUnderwayAnticipated() {
		return _reUnderwayAnticipated;
	}

	@Override
	public void setReUnderwayAnticipated(boolean reUnderwayAnticipated) {
		_reUnderwayAnticipated = reUnderwayAnticipated;
	}

	@Override
	public int getReGoal() {
		return _reGoal;
	}

	@Override
	public void setReGoal(int reGoal) {
		_reGoal = reGoal;
	}

	@Override
	public int getReResult() {
		return _reResult;
	}

	@Override
	public void setReResult(int reResult) {
		_reResult = reResult;
	}

	@Override
	public String getRePurpose() {
		if (_rePurpose == null) {
			return "";
		}
		else {
			return _rePurpose;
		}
	}

	@Override
	public void setRePurpose(String rePurpose) {
		_rePurpose = rePurpose;
	}

	@Override
	public String getReImpact() {
		if (_reImpact == null) {
			return "";
		}
		else {
			return _reImpact;
		}
	}

	@Override
	public void setReImpact(String reImpact) {
		_reImpact = reImpact;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public CExtRealEstateCampaign toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CExtRealEstateCampaign)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CExtRealEstateCampaignImpl cExtRealEstateCampaignImpl = new CExtRealEstateCampaignImpl();

		cExtRealEstateCampaignImpl.setOrganizationId(getOrganizationId());
		cExtRealEstateCampaignImpl.setCextRealEstateCampaignId(getCextRealEstateCampaignId());
		cExtRealEstateCampaignImpl.setCompanyId(getCompanyId());
		cExtRealEstateCampaignImpl.setUserId(getUserId());
		cExtRealEstateCampaignImpl.setCreateDate(getCreateDate());
		cExtRealEstateCampaignImpl.setModifiedDate(getModifiedDate());
		cExtRealEstateCampaignImpl.setReYear(getReYear());
		cExtRealEstateCampaignImpl.setReUnderwayAnticipated(isReUnderwayAnticipated());
		cExtRealEstateCampaignImpl.setReGoal(getReGoal());
		cExtRealEstateCampaignImpl.setReResult(getReResult());
		cExtRealEstateCampaignImpl.setRePurpose(getRePurpose());
		cExtRealEstateCampaignImpl.setReImpact(getReImpact());

		cExtRealEstateCampaignImpl.resetOriginalValues();

		return cExtRealEstateCampaignImpl;
	}

	@Override
	public int compareTo(CExtRealEstateCampaign cExtRealEstateCampaign) {
		int value = 0;

		if (getReYear() < cExtRealEstateCampaign.getReYear()) {
			value = -1;
		}
		else if (getReYear() > cExtRealEstateCampaign.getReYear()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CExtRealEstateCampaign)) {
			return false;
		}

		CExtRealEstateCampaign cExtRealEstateCampaign = (CExtRealEstateCampaign)obj;

		CExtRealEstateCampaignPK primaryKey = cExtRealEstateCampaign.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CExtRealEstateCampaignModelImpl cExtRealEstateCampaignModelImpl = this;

		cExtRealEstateCampaignModelImpl._originalOrganizationId = cExtRealEstateCampaignModelImpl._organizationId;

		cExtRealEstateCampaignModelImpl._setOriginalOrganizationId = false;

		cExtRealEstateCampaignModelImpl._setModifiedDate = false;

		cExtRealEstateCampaignModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CExtRealEstateCampaign> toCacheModel() {
		CExtRealEstateCampaignCacheModel cExtRealEstateCampaignCacheModel = new CExtRealEstateCampaignCacheModel();

		cExtRealEstateCampaignCacheModel.cExtRealEstateCampaignPK = getPrimaryKey();

		cExtRealEstateCampaignCacheModel.organizationId = getOrganizationId();

		cExtRealEstateCampaignCacheModel.cextRealEstateCampaignId = getCextRealEstateCampaignId();

		cExtRealEstateCampaignCacheModel.companyId = getCompanyId();

		cExtRealEstateCampaignCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			cExtRealEstateCampaignCacheModel.createDate = createDate.getTime();
		}
		else {
			cExtRealEstateCampaignCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			cExtRealEstateCampaignCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			cExtRealEstateCampaignCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		cExtRealEstateCampaignCacheModel.reYear = getReYear();

		cExtRealEstateCampaignCacheModel.reUnderwayAnticipated = isReUnderwayAnticipated();

		cExtRealEstateCampaignCacheModel.reGoal = getReGoal();

		cExtRealEstateCampaignCacheModel.reResult = getReResult();

		cExtRealEstateCampaignCacheModel.rePurpose = getRePurpose();

		String rePurpose = cExtRealEstateCampaignCacheModel.rePurpose;

		if ((rePurpose != null) && (rePurpose.length() == 0)) {
			cExtRealEstateCampaignCacheModel.rePurpose = null;
		}

		cExtRealEstateCampaignCacheModel.reImpact = getReImpact();

		String reImpact = cExtRealEstateCampaignCacheModel.reImpact;

		if ((reImpact != null) && (reImpact.length() == 0)) {
			cExtRealEstateCampaignCacheModel.reImpact = null;
		}

		return cExtRealEstateCampaignCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{organizationId=");
		sb.append(getOrganizationId());
		sb.append(", cextRealEstateCampaignId=");
		sb.append(getCextRealEstateCampaignId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", reYear=");
		sb.append(getReYear());
		sb.append(", reUnderwayAnticipated=");
		sb.append(isReUnderwayAnticipated());
		sb.append(", reGoal=");
		sb.append(getReGoal());
		sb.append(", reResult=");
		sb.append(getReResult());
		sb.append(", rePurpose=");
		sb.append(getRePurpose());
		sb.append(", reImpact=");
		sb.append(getReImpact());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("ucc.portal.model.CExtRealEstateCampaign");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cextRealEstateCampaignId</column-name><column-value><![CDATA[");
		sb.append(getCextRealEstateCampaignId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reYear</column-name><column-value><![CDATA[");
		sb.append(getReYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reUnderwayAnticipated</column-name><column-value><![CDATA[");
		sb.append(isReUnderwayAnticipated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reGoal</column-name><column-value><![CDATA[");
		sb.append(getReGoal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reResult</column-name><column-value><![CDATA[");
		sb.append(getReResult());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rePurpose</column-name><column-value><![CDATA[");
		sb.append(getRePurpose());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reImpact</column-name><column-value><![CDATA[");
		sb.append(getReImpact());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CExtRealEstateCampaign.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CExtRealEstateCampaign.class, ModelWrapper.class
		};
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private long _cextRealEstateCampaignId;
	private long _companyId;
	private long _userId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private int _reYear;
	private boolean _reUnderwayAnticipated;
	private int _reGoal;
	private int _reResult;
	private String _rePurpose;
	private String _reImpact;
	private long _columnBitmask;
	private CExtRealEstateCampaign _escapedModel;
}