/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ucc.portal.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import ucc.portal.model.UccPeople;
import ucc.portal.model.UccPeopleModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the UccPeople service. Represents a row in the &quot;UCC_Data_Warehouse.dbo.People&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link UccPeopleModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UccPeopleImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UccPeopleImpl
 * @see UccPeople
 * @see UccPeopleModel
 * @generated
 */
@ProviderType
public class UccPeopleModelImpl extends BaseModelImpl<UccPeople>
	implements UccPeopleModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ucc people model instance should use the {@link UccPeople} interface instead.
	 */
	public static final String TABLE_NAME = "UCC_Data_Warehouse.dbo.People";
	public static final Object[][] TABLE_COLUMNS = {
			{ "peopleId", Types.INTEGER },
			{ "first", Types.VARCHAR },
			{ "middle", Types.VARCHAR },
			{ "last", Types.VARCHAR },
			{ "suffix", Types.VARCHAR },
			{ "dateOfBirth", Types.VARCHAR },
			{ "active", Types.BOOLEAN },
			{ "old_peopleId", Types.INTEGER },
			{ "phone", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "cell_phone", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("peopleId", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("first", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("middle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("last", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("suffix", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateOfBirth", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("active", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("old_peopleId", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("phone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cell_phone", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table UCC_Data_Warehouse.dbo.People (peopleId INTEGER not null primary key,first VARCHAR(75) null,middle VARCHAR(75) null,last VARCHAR(75) null,suffix VARCHAR(75) null,dateOfBirth VARCHAR(75) null,active BOOLEAN,old_peopleId INTEGER,phone VARCHAR(75) null,email VARCHAR(75) null,cell_phone VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table UCC_Data_Warehouse.dbo.People";
	public static final String ORDER_BY_JPQL = " ORDER BY uccPeople.lastName ASC, uccPeople.firstName ASC, uccPeople.middleName ASC, uccPeople.suffix ASC";
	public static final String ORDER_BY_SQL = " ORDER BY UCC_Data_Warehouse.dbo.People.last ASC, UCC_Data_Warehouse.dbo.People.first ASC, UCC_Data_Warehouse.dbo.People.middle ASC, UCC_Data_Warehouse.dbo.People.suffix ASC";
	public static final String DATA_SOURCE = "uccDataSource";
	public static final String SESSION_FACTORY = "uccSessionFactory";
	public static final String TX_MANAGER = "uccTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.ucc.portal.model.UccPeople"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.ucc.portal.model.UccPeople"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(ucc.portal.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.ucc.portal.model.UccPeople"),
			true);
	public static final long MYACTIVE_COLUMN_BITMASK = 1L;
	public static final long OLDUCCPEOPLEID_COLUMN_BITMASK = 2L;
	public static final long LASTNAME_COLUMN_BITMASK = 4L;
	public static final long FIRSTNAME_COLUMN_BITMASK = 8L;
	public static final long MIDDLENAME_COLUMN_BITMASK = 16L;
	public static final long SUFFIX_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(ucc.portal.service.util.ServiceProps.get(
				"lock.expiration.time.ucc.portal.model.UccPeople"));

	public UccPeopleModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _uccPeopleId;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setUccPeopleId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _uccPeopleId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return UccPeople.class;
	}

	@Override
	public String getModelClassName() {
		return UccPeople.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uccPeopleId", getUccPeopleId());
		attributes.put("firstName", getFirstName());
		attributes.put("middleName", getMiddleName());
		attributes.put("lastName", getLastName());
		attributes.put("suffix", getSuffix());
		attributes.put("birthday", getBirthday());
		attributes.put("myActive", isMyActive());
		attributes.put("oldUccPeopleId", getOldUccPeopleId());
		attributes.put("phone", getPhone());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("cellPhone", getCellPhone());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer uccPeopleId = (Integer)attributes.get("uccPeopleId");

		if (uccPeopleId != null) {
			setUccPeopleId(uccPeopleId);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String middleName = (String)attributes.get("middleName");

		if (middleName != null) {
			setMiddleName(middleName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		String suffix = (String)attributes.get("suffix");

		if (suffix != null) {
			setSuffix(suffix);
		}

		String birthday = (String)attributes.get("birthday");

		if (birthday != null) {
			setBirthday(birthday);
		}

		Boolean myActive = (Boolean)attributes.get("myActive");

		if (myActive != null) {
			setMyActive(myActive);
		}

		Integer oldUccPeopleId = (Integer)attributes.get("oldUccPeopleId");

		if (oldUccPeopleId != null) {
			setOldUccPeopleId(oldUccPeopleId);
		}

		String phone = (String)attributes.get("phone");

		if (phone != null) {
			setPhone(phone);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		String cellPhone = (String)attributes.get("cellPhone");

		if (cellPhone != null) {
			setCellPhone(cellPhone);
		}
	}

	@Override
	public int getUccPeopleId() {
		return _uccPeopleId;
	}

	@Override
	public void setUccPeopleId(int uccPeopleId) {
		_uccPeopleId = uccPeopleId;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return "";
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_columnBitmask = -1L;

		_firstName = firstName;
	}

	@Override
	public String getMiddleName() {
		if (_middleName == null) {
			return "";
		}
		else {
			return _middleName;
		}
	}

	@Override
	public void setMiddleName(String middleName) {
		_columnBitmask = -1L;

		_middleName = middleName;
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return "";
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_columnBitmask = -1L;

		_lastName = lastName;
	}

	@Override
	public String getSuffix() {
		if (_suffix == null) {
			return "";
		}
		else {
			return _suffix;
		}
	}

	@Override
	public void setSuffix(String suffix) {
		_columnBitmask = -1L;

		_suffix = suffix;
	}

	@Override
	public String getBirthday() {
		if (_birthday == null) {
			return "";
		}
		else {
			return _birthday;
		}
	}

	@Override
	public void setBirthday(String birthday) {
		_birthday = birthday;
	}

	@Override
	public boolean getMyActive() {
		return _myActive;
	}

	@Override
	public boolean isMyActive() {
		return _myActive;
	}

	@Override
	public void setMyActive(boolean myActive) {
		_columnBitmask |= MYACTIVE_COLUMN_BITMASK;

		if (!_setOriginalMyActive) {
			_setOriginalMyActive = true;

			_originalMyActive = _myActive;
		}

		_myActive = myActive;
	}

	public boolean getOriginalMyActive() {
		return _originalMyActive;
	}

	@Override
	public int getOldUccPeopleId() {
		return _oldUccPeopleId;
	}

	@Override
	public void setOldUccPeopleId(int oldUccPeopleId) {
		_columnBitmask |= OLDUCCPEOPLEID_COLUMN_BITMASK;

		if (!_setOriginalOldUccPeopleId) {
			_setOriginalOldUccPeopleId = true;

			_originalOldUccPeopleId = _oldUccPeopleId;
		}

		_oldUccPeopleId = oldUccPeopleId;
	}

	public int getOriginalOldUccPeopleId() {
		return _originalOldUccPeopleId;
	}

	@Override
	public String getPhone() {
		if (_phone == null) {
			return "";
		}
		else {
			return _phone;
		}
	}

	@Override
	public void setPhone(String phone) {
		_phone = phone;
	}

	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return "";
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_emailAddress = emailAddress;
	}

	@Override
	public String getCellPhone() {
		if (_cellPhone == null) {
			return "";
		}
		else {
			return _cellPhone;
		}
	}

	@Override
	public void setCellPhone(String cellPhone) {
		_cellPhone = cellPhone;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public UccPeople toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UccPeople)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UccPeopleImpl uccPeopleImpl = new UccPeopleImpl();

		uccPeopleImpl.setUccPeopleId(getUccPeopleId());
		uccPeopleImpl.setFirstName(getFirstName());
		uccPeopleImpl.setMiddleName(getMiddleName());
		uccPeopleImpl.setLastName(getLastName());
		uccPeopleImpl.setSuffix(getSuffix());
		uccPeopleImpl.setBirthday(getBirthday());
		uccPeopleImpl.setMyActive(isMyActive());
		uccPeopleImpl.setOldUccPeopleId(getOldUccPeopleId());
		uccPeopleImpl.setPhone(getPhone());
		uccPeopleImpl.setEmailAddress(getEmailAddress());
		uccPeopleImpl.setCellPhone(getCellPhone());

		uccPeopleImpl.resetOriginalValues();

		return uccPeopleImpl;
	}

	@Override
	public int compareTo(UccPeople uccPeople) {
		int value = 0;

		value = getLastName().compareTo(uccPeople.getLastName());

		if (value != 0) {
			return value;
		}

		value = getFirstName().compareTo(uccPeople.getFirstName());

		if (value != 0) {
			return value;
		}

		value = getMiddleName().compareTo(uccPeople.getMiddleName());

		if (value != 0) {
			return value;
		}

		value = getSuffix().compareTo(uccPeople.getSuffix());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UccPeople)) {
			return false;
		}

		UccPeople uccPeople = (UccPeople)obj;

		int primaryKey = uccPeople.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		UccPeopleModelImpl uccPeopleModelImpl = this;

		uccPeopleModelImpl._originalMyActive = uccPeopleModelImpl._myActive;

		uccPeopleModelImpl._setOriginalMyActive = false;

		uccPeopleModelImpl._originalOldUccPeopleId = uccPeopleModelImpl._oldUccPeopleId;

		uccPeopleModelImpl._setOriginalOldUccPeopleId = false;

		uccPeopleModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<UccPeople> toCacheModel() {
		UccPeopleCacheModel uccPeopleCacheModel = new UccPeopleCacheModel();

		uccPeopleCacheModel.uccPeopleId = getUccPeopleId();

		uccPeopleCacheModel.firstName = getFirstName();

		String firstName = uccPeopleCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			uccPeopleCacheModel.firstName = null;
		}

		uccPeopleCacheModel.middleName = getMiddleName();

		String middleName = uccPeopleCacheModel.middleName;

		if ((middleName != null) && (middleName.length() == 0)) {
			uccPeopleCacheModel.middleName = null;
		}

		uccPeopleCacheModel.lastName = getLastName();

		String lastName = uccPeopleCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			uccPeopleCacheModel.lastName = null;
		}

		uccPeopleCacheModel.suffix = getSuffix();

		String suffix = uccPeopleCacheModel.suffix;

		if ((suffix != null) && (suffix.length() == 0)) {
			uccPeopleCacheModel.suffix = null;
		}

		uccPeopleCacheModel.birthday = getBirthday();

		String birthday = uccPeopleCacheModel.birthday;

		if ((birthday != null) && (birthday.length() == 0)) {
			uccPeopleCacheModel.birthday = null;
		}

		uccPeopleCacheModel.myActive = isMyActive();

		uccPeopleCacheModel.oldUccPeopleId = getOldUccPeopleId();

		uccPeopleCacheModel.phone = getPhone();

		String phone = uccPeopleCacheModel.phone;

		if ((phone != null) && (phone.length() == 0)) {
			uccPeopleCacheModel.phone = null;
		}

		uccPeopleCacheModel.emailAddress = getEmailAddress();

		String emailAddress = uccPeopleCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			uccPeopleCacheModel.emailAddress = null;
		}

		uccPeopleCacheModel.cellPhone = getCellPhone();

		String cellPhone = uccPeopleCacheModel.cellPhone;

		if ((cellPhone != null) && (cellPhone.length() == 0)) {
			uccPeopleCacheModel.cellPhone = null;
		}

		return uccPeopleCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{uccPeopleId=");
		sb.append(getUccPeopleId());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", middleName=");
		sb.append(getMiddleName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", suffix=");
		sb.append(getSuffix());
		sb.append(", birthday=");
		sb.append(getBirthday());
		sb.append(", myActive=");
		sb.append(isMyActive());
		sb.append(", oldUccPeopleId=");
		sb.append(getOldUccPeopleId());
		sb.append(", phone=");
		sb.append(getPhone());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", cellPhone=");
		sb.append(getCellPhone());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("ucc.portal.model.UccPeople");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uccPeopleId</column-name><column-value><![CDATA[");
		sb.append(getUccPeopleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>middleName</column-name><column-value><![CDATA[");
		sb.append(getMiddleName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>suffix</column-name><column-value><![CDATA[");
		sb.append(getSuffix());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthday</column-name><column-value><![CDATA[");
		sb.append(getBirthday());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>myActive</column-name><column-value><![CDATA[");
		sb.append(isMyActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oldUccPeopleId</column-name><column-value><![CDATA[");
		sb.append(getOldUccPeopleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phone</column-name><column-value><![CDATA[");
		sb.append(getPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cellPhone</column-name><column-value><![CDATA[");
		sb.append(getCellPhone());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = UccPeople.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			UccPeople.class, ModelWrapper.class
		};
	private int _uccPeopleId;
	private String _firstName;
	private String _middleName;
	private String _lastName;
	private String _suffix;
	private String _birthday;
	private boolean _myActive;
	private boolean _originalMyActive;
	private boolean _setOriginalMyActive;
	private int _oldUccPeopleId;
	private int _originalOldUccPeopleId;
	private boolean _setOriginalOldUccPeopleId;
	private String _phone;
	private String _emailAddress;
	private String _cellPhone;
	private long _columnBitmask;
	private UccPeople _escapedModel;
}