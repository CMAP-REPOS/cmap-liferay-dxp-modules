/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ucc.portal.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the UccAssociation service. Represents a row in the &quot;UCC_Data_Warehouse.dbo.Association&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link ucc.portal.model.impl.UccAssociationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ucc.portal.model.impl.UccAssociationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UccAssociation
 * @see ucc.portal.model.impl.UccAssociationImpl
 * @see ucc.portal.model.impl.UccAssociationModelImpl
 * @generated
 */
@ProviderType
public interface UccAssociationModel extends BaseModel<UccAssociation> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a ucc association model instance should use the {@link UccAssociation} interface instead.
	 */

	/**
	 * Returns the primary key of this ucc association.
	 *
	 * @return the primary key of this ucc association
	 */
	public int getPrimaryKey();

	/**
	 * Sets the primary key of this ucc association.
	 *
	 * @param primaryKey the primary key of this ucc association
	 */
	public void setPrimaryKey(int primaryKey);

	/**
	 * Returns the ucc association ID of this ucc association.
	 *
	 * @return the ucc association ID of this ucc association
	 */
	public int getUccAssociationId();

	/**
	 * Sets the ucc association ID of this ucc association.
	 *
	 * @param uccAssociationId the ucc association ID of this ucc association
	 */
	public void setUccAssociationId(int uccAssociationId);

	/**
	 * Returns the ucc conference ID of this ucc association.
	 *
	 * @return the ucc conference ID of this ucc association
	 */
	public int getUccConferenceId();

	/**
	 * Sets the ucc conference ID of this ucc association.
	 *
	 * @param uccConferenceId the ucc conference ID of this ucc association
	 */
	public void setUccConferenceId(int uccConferenceId);

	/**
	 * Returns the name of this ucc association.
	 *
	 * @return the name of this ucc association
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this ucc association.
	 *
	 * @param name the name of this ucc association
	 */
	public void setName(String name);

	/**
	 * Returns the abbreviation of this ucc association.
	 *
	 * @return the abbreviation of this ucc association
	 */
	@AutoEscape
	public String getAbbreviation();

	/**
	 * Sets the abbreviation of this ucc association.
	 *
	 * @param abbreviation the abbreviation of this ucc association
	 */
	public void setAbbreviation(String abbreviation);

	/**
	 * Returns the my active of this ucc association.
	 *
	 * @return the my active of this ucc association
	 */
	public boolean getMyActive();

	/**
	 * Returns <code>true</code> if this ucc association is my active.
	 *
	 * @return <code>true</code> if this ucc association is my active; <code>false</code> otherwise
	 */
	public boolean isMyActive();

	/**
	 * Sets whether this ucc association is my active.
	 *
	 * @param myActive the my active of this ucc association
	 */
	public void setMyActive(boolean myActive);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(UccAssociation uccAssociation);

	@Override
	public int hashCode();

	@Override
	public CacheModel<UccAssociation> toCacheModel();

	@Override
	public UccAssociation toEscapedModel();

	@Override
	public UccAssociation toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}